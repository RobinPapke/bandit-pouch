{"version":3,"sources":["webpack:///./src/components/markdown.js","webpack:///../src/ui/Select.js","webpack:///../src/ui/ErrorPage.js","webpack:///../src/ui/Abbreviation.js","webpack:///../src/ui/DropdownButton.js","webpack:///../src/ui/DynamicRow.js","webpack:///../src/ui/MagicRow.js","webpack:///../src/ui/PageNotFound.js","webpack:///../src/ui/Loaders.js","webpack:///../src/ui/LoadingWrapper.js","webpack:///../src/utils.js","webpack:///../src/ui/Layout.js","webpack:///../src/ui/NotificationList.js","webpack:///../src/forms/FieldError.js","webpack:///../src/forms/FormField.js","webpack:///../src/forms/CheckboxField.js","webpack:///../src/forms/FieldArray/KeyValueFieldArray.js","webpack:///../src/forms/FieldArray/VerticalFieldArray/FieldArrayElement.js","webpack:///../src/forms/FieldArray/VerticalFieldArray/SortableList.js","webpack:///../src/forms/FieldArray/VerticalFieldArray/VerticalFieldArray.js","webpack:///../src/forms/FieldArray/VerticalFieldArray/index.js","webpack:///../src/forms/InputField.js","webpack:///../src/forms/PasswordField.js","webpack:///../src/forms/RangeField.js","webpack:///../src/forms/SelectField.js","webpack:///../src/forms/SpinnerField.js","webpack:///../src/forms/SubmitResetRow.js","webpack:///../src/forms/TextAreaField.js","webpack:///../src/forms/TextField.js","webpack:///../src/ui/MonthPicker.js","webpack:///../src/forms/MonthPickerField.js","webpack:///../src/forms/validators.js","webpack:///../src/redux/reducers.js","webpack:///../src/redux/requests.js","webpack:///./node_modules/react-bootstrap/es/Jumbotron.js","webpack:///./src/pages/ui.js"],"names":["MarkdownTabs","_ref","id","pages","examples","defaultActiveKey","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","Container","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","sm","md","lg","react_bootstrap__WEBPACK_IMPORTED_MODULE_12__","bsStyle","stacked","map","page","react_bootstrap__WEBPACK_IMPORTED_MODULE_13__","key","eventKey","title","Content","animation","Pane","Markdown","html","getArticles","_ref2$allMarkdownRema","arguments","length","undefined","allMarkdownRemark","_ref3$edges","edges","_ref4","node","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_5___default","frontmatter","Tabs","_ref5","data","propTypes","PropTypes","string","isRequired","array","object","defaultProps","_Component","props","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","element","React","createRef","_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default","_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default","value","current","querySelectorAll","forEach","hljs","highlightBlock","_this$props","ref","className","xs","dangerouslySetInnerHTML","__html","example","Component","Select","options","valueKey","labelKey","multi","async","creatable","objectWithoutPropertiesLoose_default","ResolvedSelectComponent","SelectComponent","AsyncCreatable","Async","Creatable","resolveSelectComponent","react_default","Object","assign","arrayOf","any","loadOptions","func","bool","ErrorPage","icon","status","message","classnames","lib_default","name","size","oneOfType","number","Abbreviation","label","type","tooltip","style","borderBottom","oneOf","DropdownButton","onSelect","children","shouldUseNormalButton","Children","count","Button","onClick","es_DropdownButton","_","noop","DynamicRow","items","render","_ref$defaultWidth","defaultWidth","rowWidth","itemIndex","rows","reduce","rowsPerItem","item","colIndex","itemWidth","Math","min","width","push","isUndefined","visible","Col","chain","filter","row","isEmpty","rowIndex","Row","shape","MagicRow","colSizeKey","colCount","flatMap","identity","child","newCols","PageNotFound","ui_ErrorPage","Loader","active","react_loaders_default","CenteredLoader","height","display","justifyContent","alignItems","Loaders_Loader","LoadingWrapper","Child","component","loader","loading","error","found","ui_PageNotFound","isFunction","Error","_Error","isPlainObject","CHILDREN_PROP_TYPE","debug","text","Tooltip","get","popover","content","Popover","assert","deprecate","CHILDREN_PROP_TYPES","Page","apply","inheritsLoose_default","_proto","prototype","componentDidMount","document","componentWillReceiveProps","nextProps","TopPanel","HorizontalSplit","_ref2","_ref3","Left","_ref4$contentWidthXs","contentWidthXs","_ref4$contentWidthSm","contentWidthSm","Right","_ref5$contentWidthXs","_ref5$contentWidthSm","Float","_ref6","position","bottom","right","NotificationItem","componentWillMount","timeout","setTimeout","dismiss","componentWillUnmount","clearTimeout","onClose","_clearTimeout","toString","_this2","header","errors","Alert","onDismiss","NotificationList","alerts","clearAlert","NotificationList_NotificationItem","FieldError","_ref$style","_ref$children","FormField","help","_ref$meta","meta","touched","validationState","getValidationState","isString","split","FormGroup","controlId","ControlLabel","HelpBlock","forms_FieldError","e","i","CheckboxField","input","disabled","forms_FormField","Checkbox","checked","onChange","evt","target","KeyValueFieldArray","fields","keyField","valueField","emptyMessage","bsSize","marginLeft","Glyphicon","glyph","ui_MagicRow","field","idx","marginBottom","es","InputGroup","Addon","borderLeft","borderRight","padding","OverlayTrigger","placement","overlay","Utils","remove","FormControl","Feedback","FieldArrayElement","initiallyMinimized","state","minimized","shouldComponentUpdate","nextState","some","setMinimized","setState","prevState","dragHandleProps","minimizable","duplicable","onRemove","onDuplicate","transition","overflow","Panel","Body","fontSize","marginRight","aria-label","aria-hidden","marginTop","SortableList","_this$props$direction","direction","onDragEnd","dragHandle","react_beautiful_dnd_esm","droppableId","provided","snapshot","innerRef","droppableProps","classNames","dropping","isDraggingOver","index","draggableId","providedDraggable","draggableSnapshot","draggableProps","dragging","cloneElement","placeholder","VerticalFieldArray","firstRender","isEqual","getAll","renderField","InnerComponent","innerComponent","innerProps","labelDefault","_this$props$renderKey","renderKey","_this$props$renderLab","renderLabel","VerticalFieldArray_FieldArrayElement","currentValue","_this$props2","initialFieldValue","sortable","addTooltip","addChoices","onAdd","fieldArray","SortableList_SortableList","source","destination","move","textAlign","margin","ui_DropdownButton","selected","InputField","onChangeValue","componentClass","PasswordField","forms_InputField","RangeField","formatLabel","max","step","js_default","toNumber","onChangeComplete","onBlur","SelectField","defaultValue","isLoading","clearable","_ref$onChangeWithValu","onChangeWithValue","denormalize","denormalized","ui_Select","selection","onFocus","SpinnerField","SubmitResetRow","enabled","pristine","submitting","submitFailed","valid","reset","ButtonToolbar","TextAreaField","cols","TextField","format","year","month","moment","toState","_value$split","date","Date","getFullYear","getMonth","parseInt","MonthPicker","_len","args","Array","_key","concat","onToggle","bind","assertThisInitialized_default","opened","months","monthsShort","execute","onYearChange","diff","event","callback","_this$state","_this$state2","Dropdown","readOnly","open","Toggle","useAnchor","noCaret","Menu","SafeAnchor","MonthPickerField","ui_MonthPicker","TEMPLATE_REGEX","ALPHANUMERIC_REGEX","URL_REGEX","RegExp","formatTemplate","template","replace","match","required","errorTemplate","isNull","trim","isArray","isObject","regex","pattern","isRegExp","url","alpha","containing","values","includes","join","excluding","isValidLimitArg","limit","isInteger","validateLength","validate","formatError","isNaN","getLength","minErrorTemplates","k","v","maxErrorTemplates","betweenErrorTemplates","between","RequestManager","elementType_default","Jumbotron_Jumbotron","_React$Component","Jumbotron","inheritsLoose","objectWithoutPropertiesLoose","_splitBsProps","bootstrapUtils","bsProps","elementProps","classes","esm_extends","classnames_default","es_Jumbotron","AbbreviationExample","subtract","src","fromNow","LoadersExample","LayoutExample","Nav","NavItem","href","LoadedPage","model","mocks","LoadingWrapperExample","_getPrototypeOf2","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","toConsumableArray_default","objectSpread_default","_this3","minHeight","ButtonGroup","fetch","PagesExample","NotificationsExample","_this4","now","alert","_this5","_this$state$alerts","onAddAlert","onClearAlert","LayoutPage","layout","markdown","ui-pages","ui_PagesExample","ui-layout","ui_LayoutExample","ui-loaders","ui_LoadersExample","ui-abbreviation","ui_AbbreviationExample","ui-notifications","ui_NotificationsExample","ui-loading-wrapper","ui_LoadingWrapperExample","pageQuery"],"mappings":"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","file":"component---src-pages-ui-js-23991adeb09a831a759d.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport hljs from 'highlight.js';\n\nimport {\n  Col,\n  Row,\n  Nav,\n  Tab,\n  NavItem,\n} from 'react-bootstrap';\n\nconst MarkdownTabs = ({\n  id, pages, examples, defaultActiveKey,\n}) => (\n  <Tab.Container id={id} defaultActiveKey={defaultActiveKey}>\n    <Row>\n      <Col sm={4} md={3} lg={2}>\n        <Nav bsStyle=\"pills\" stacked>\n          {pages.map(page => (\n            <NavItem key={page.id} eventKey={page.id}>{page.title}</NavItem>\n          ))}\n        </Nav>\n      </Col>\n      <Col sm={8} md={9} lg={10}>\n        <Tab.Content animation>\n          {pages.map(page => (\n            <Tab.Pane key={page.id} eventKey={page.id} title={page.title}>\n              <Markdown\n                html={page.html}\n                title={page.title}\n                examples={examples[page.id]}\n              />\n            </Tab.Pane>\n          ))}\n        </Tab.Content>\n      </Col>\n    </Row>\n  </Tab.Container>\n);\n\nMarkdownTabs.propTypes = {\n  id: PropTypes.string.isRequired,\n  pages: PropTypes.array.isRequired,\n  examples: PropTypes.object,\n  defaultActiveKey: PropTypes.string.isRequired,\n};\n\nMarkdownTabs.defaultProps = {\n  examples: {},\n};\n\n// extract articles from the GraphQL response\nexport function getArticles(data = {}) {\n  const { allMarkdownRemark = {} } = data || {};\n  const { edges = [] } = allMarkdownRemark || {};\n  return edges.map(({ node }) => ({\n    html: node.html,\n    ...node.frontmatter,\n  }));\n}\n\nexport function Tabs({\n  id, defaultActiveKey, data, examples,\n}) {\n  const pages = getArticles(data);\n\n  return (\n    <MarkdownTabs\n      id={id}\n      pages={pages}\n      examples={examples}\n      defaultActiveKey={defaultActiveKey}\n    />\n  );\n}\n\nTabs.propTypes = {\n  id: PropTypes.string.isRequired,\n  data: PropTypes.object.isRequired,\n  examples: PropTypes.object,\n  defaultActiveKey: PropTypes.string.isRequired,\n};\n\nTabs.defaultProps = {\n  examples: {},\n};\n\nexport class Markdown extends Component {\n  constructor(props) {\n    super(props);\n    this.element = React.createRef();\n  }\n\n  componentDidMount() {\n    const { current } = this.element;\n    current.querySelectorAll('code').forEach(element => hljs.highlightBlock(element));\n  }\n\n  render() {\n    const { title, html, examples } = this.props;\n\n    return (\n      <div ref={this.element} className=\"row markdown-container\">\n        <Col xs={12}>\n          <h1>{title}</h1>\n        </Col>\n        <hr />\n        <Col xs={12}>\n          <div\n            className=\"markdown-content\"\n            dangerouslySetInnerHTML={{ __html: html }} // eslint-disable-line react/no-danger\n          />\n          {examples.map(example => (\n            <span key={example}>{example}</span>\n          ))}\n        </Col>\n      </div>\n    );\n  }\n}\n\nMarkdown.propTypes = {\n  title: PropTypes.string.isRequired,\n  html: PropTypes.string.isRequired,\n  examples: PropTypes.array,\n};\n\nMarkdown.defaultProps = {\n  examples: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SelectComponent from 'react-select';\n\nfunction resolveSelectComponent(async, creatable) {\n  if (async) {\n    return creatable ? SelectComponent.AsyncCreatable : SelectComponent.Async;\n  }\n  return creatable ? SelectComponent.Creatable : SelectComponent;\n}\n\n/**\n * Component that behaves as a wrapper around `react-select` component in order\n * to create a unified API between different version of the original component.\n *\n * Please checkout `react-select` documentation for usage.\n */\nconst Select = ({\n  value,\n  options,\n  valueKey,\n  labelKey,\n  multi,\n  async,\n  creatable,\n  ...props\n}) => {\n  const ResolvedSelectComponent = resolveSelectComponent(async, creatable);\n\n  return (\n    <ResolvedSelectComponent\n      {...props}\n      multi={multi}\n      value={value}\n      options={options}\n      valueKey={valueKey}\n      labelKey={labelKey}\n    />\n  );\n};\n\nSelect.propTypes = {\n  /**\n   * Currently selected value\n   */\n  value: PropTypes.string,\n  /**\n   * Key used to extract the value from the options object. Defaults to `value`\n   */\n  valueKey: PropTypes.string,\n  /**\n   * Key used to extract the label from the options object. Defaults to `label`\n   */\n  labelKey: PropTypes.string,\n  /**\n   * Available select options\n   */\n  options: PropTypes.arrayOf(PropTypes.any),\n  /**\n   * Callback used to load options asynchronously. It can also be a Promise\n   */\n  loadOptions: PropTypes.func,\n  /**\n   * Should the value from the select's input field be created when it's missing in the options\n   */\n  creatable: PropTypes.bool,\n  /**\n   * Should this component accept multiple values\n   */\n  multi: PropTypes.bool,\n  /**\n   * Loads the data from a promise or a callback\n   */\n  async: PropTypes.bool,\n};\n\nSelect.defaultProps = {\n  value: null,\n  valueKey: 'value',\n  labelKey: 'label',\n  options: [],\n  loadOptions: null,\n  creatable: false,\n  async: false,\n  multi: false,\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport FontAwesome from 'react-fontawesome';\n\n/**\n * Renders an error page with an error message and a Font Awesome icon\n */\nconst ErrorPage = ({\n  icon, status, className, message,\n}) => (\n  <div className={classnames('error-page', 'bandit-error-page', className)}>\n\n    {status && (\n      <div className={classnames('error-page-status', `error-${status}`)}>\n        {status}\n      </div>\n    )}\n\n    <div className=\"error-page-message-wrapper\">\n      {icon && <FontAwesome name={icon} size=\"3x\" className=\"error-page-icon\" />}\n      <h1 className=\"error-page-message\">{message}</h1>\n    </div>\n  </div>\n);\n\nErrorPage.propTypes = {\n  /**\n   * Font awesome icon\n   */\n  icon: PropTypes.string,\n  /**\n   * Additional class names\n   */\n  className: PropTypes.string,\n\n  /**\n   * HTTP Error status code\n   */\n  status: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n\n  /**\n   * Error message to be shown in the page. It can be a String,\n   * React Component or an node\n   */\n  message: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.string,\n    PropTypes.node,\n  ]).isRequired,\n};\n\nErrorPage.defaultProps = {\n  icon: null,\n  status: null,\n  className: null,\n};\n\nexport default ErrorPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Used to wrap a label in abbreviation tags if a valid tooltip is provided. We differentiate the abbr style\n * depending on the type passed in so that the dotted line is shown properly on the metric labels.\n */\nconst Abbreviation = ({\n  label, type, tooltip, ...props\n}) => {\n  if (tooltip) {\n    return (\n      <abbr\n        {...props}\n        title={tooltip}\n        style={{ borderBottom: `1px dotted ${type === 'metric' ? '#FFF' : '#777'}` }}\n      >\n        {label}\n      </abbr>\n    );\n  }\n\n  return (<span {...props}>{label}</span>);\n};\n\nAbbreviation.propTypes = {\n  /**\n   * Abbreviation label text defining the item\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * String description of the label\n   */\n  tooltip: PropTypes.string,\n  /**\n   * The type of object that the label is being defined for.\n   * Choices: metric, dimension or any(default)\n   */\n  type: PropTypes.oneOf(['metric', 'dimension', 'any']),\n};\n\nAbbreviation.defaultProps = {\n  type: 'any',\n  tooltip: null,\n};\n\nexport default Abbreviation;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n  Button as BootstrapButton,\n  DropdownButton as BootstrapDropdownButton,\n} from 'react-bootstrap';\nimport _ from 'lodash';\n\n\n/**\n * Component that renders a dropdown button. If no MenuItem is provided as children it will behave as a normal button.\n */\nconst DropdownButton = ({\n  title,\n  className,\n  style,\n  onSelect,\n  children,\n  ...props\n}) => {\n  const shouldUseNormalButton = React.Children.count(children) < 2;\n\n  return (\n    <span\n      className={className}\n      style={style}\n    >\n      {shouldUseNormalButton\n        ? (\n          <BootstrapButton\n            {...props}\n            onClick={onSelect}\n          >\n            {title}\n          </BootstrapButton>\n        ) : (\n          <BootstrapDropdownButton\n            {...props}\n            title={title}\n            onSelect={onSelect}\n          >\n            {children}\n          </BootstrapDropdownButton>\n        )}\n    </span>\n  );\n};\n\n\nDropdownButton.propTypes = {\n  /**\n   * The class name that is applied to the outer wrapper\n   */\n  className: PropTypes.string,\n  /**\n   * The style object that is applied to the outer wrapper\n   */\n  style: PropTypes.object,\n  /**\n   * The title that will be displayed when using the dropdown button\n   */\n  title: PropTypes.string,\n  /**\n   * Callback function that returns the selected menu value, when dropdown mode is available\n   */\n  onSelect: PropTypes.func,\n  /**\n   * A list of MenuItem elements to be rendered in the dropdown. If none is provided then the button will behave as\n   * a normal button\n   */\n  children: PropTypes.arrayOf(PropTypes.element),\n};\n\nDropdownButton.defaultProps = {\n  className: '',\n  style: {},\n  title: '',\n  onSelect: _.noop,\n  children: null,\n};\n\nexport default DropdownButton;\n","import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n  Col,\n  Row,\n} from 'react-bootstrap';\n\nconst MAX_COLUMNS = 12;\n\n\n/**\n * Dynamically renders a Bootstrap grid ensuring that a new Row is used once the column width exceeds 12. This helps to\n * avoid wrapping issues and also can handle having components with various widths.\n */\nconst DynamicRow = ({\n  items, render, defaultWidth = MAX_COLUMNS, children, className, style,\n}) => {\n  let rowWidth = MAX_COLUMNS;\n\n\n  let itemIndex = 0;\n\n  const rows = _.reduce(items, (rowsPerItem, item, colIndex) => {\n    const itemWidth = Math.min(item.width || defaultWidth, 12);\n    if (rowWidth + itemWidth > 12) {\n      rowsPerItem.push([]);\n      rowWidth = 0;\n    }\n\n    if (_.isUndefined(item.visible) || item.visible) {\n      rowsPerItem[rowsPerItem.length - 1].push(\n        <Col\n          key={colIndex}\n          xs={12}\n          sm={itemWidth}\n        >\n          {render(item, itemIndex)}\n        </Col>,\n      );\n      rowWidth += itemWidth;\n    }\n\n    itemIndex += 1;\n    return rowsPerItem;\n  }, []);\n\n  if (!_.isUndefined(children)) {\n    /* Place the children in the remaining space of the last row or create a new row for it if there is none. */\n    let width = MAX_COLUMNS - rowWidth;\n    if (width < 1) {\n      width = MAX_COLUMNS;\n      rows.push([]);\n    }\n\n    const lastRow = rows[rows.length - 1];\n    lastRow.push(\n      <Col\n        key=\"extra\"\n        xs={MAX_COLUMNS}\n        sm={width}\n      >\n        {children}\n      </Col>,\n    );\n  }\n\n  return (\n    <div className={className} style={style}>\n      {_\n        .chain(rows)\n        .filter(row => !_.isEmpty(row))\n        .map((row, rowIndex) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <Row key={rowIndex}>\n            {row}\n          </Row>\n        ))\n        .value()}\n    </div>\n  );\n};\n\nDynamicRow.propTypes = {\n  /**\n   * The class name that is applied to the outer wrapper\n   */\n  className: PropTypes.string,\n  /**\n   * The style object that is applied to the outer wrapper\n   */\n  style: PropTypes.object,\n  /*\n   * The contents of the grid. Items should have an attribute of \"width\", otherwise the defaultWidth is used.\n   */\n  items: PropTypes.arrayOf(PropTypes.shape({\n    width: PropTypes.number,\n  })).isRequired,\n  /*\n   * The contents of the grid. Items should have an attribute of \"width\", otherwise the defaultWidth is used.\n   */\n  render: PropTypes.func.isRequired,\n  /*\n   *  The render function for the contents of the column. This behaves like the map function over `items`.\n   *  The render function has the signature `render(item, index)`.\n   */\n  defaultWidth: PropTypes.number.isRequired,\n  /**\n   * A list of children column elements to be rendered\n   */\n  children: PropTypes.arrayOf(PropTypes.element),\n};\n\nDynamicRow.defaultProps = {\n  className: '',\n  style: {},\n  children: null,\n};\n\nexport default DynamicRow;\n","import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n  Row,\n} from 'react-bootstrap';\n\n\n/**\n * This is a simpler version of the dynamic row component.\n */\nconst MagicRow = ({\n  className, style, colSizeKey, children,\n}) => {\n  const rows = [[]];\n  let colCount = 0;\n  _.flatMap(children)\n    .filter(_.identity)\n    .forEach((child) => {\n      const newCols = child.props[colSizeKey];\n      if (colCount + newCols > 12) {\n        rows.push([]);\n        colCount = 0;\n      }\n\n      rows[rows.length - 1].push(child);\n      colCount += newCols;\n    });\n\n  return (\n    <div\n      className={className}\n      style={style}\n    >\n      {_.map(rows, (row, rowIndex) => (\n        <Row key={rowIndex}>\n          {row}\n        </Row>\n      ))}\n    </div>\n  );\n};\n\n\nMagicRow.propTypes = {\n  /**\n   * The class name that is applied to the outer wrapper\n   */\n  className: PropTypes.string,\n  /**\n   * The style object that is applied to the outer wrapper\n   */\n  style: PropTypes.object,\n  colSizeKey: PropTypes.string,\n  /**\n   * A list of MenuItem elements to be rendered in the dropdown. If none is provided then the button will behave as\n   * a normal button\n   */\n  children: PropTypes.arrayOf(PropTypes.element),\n};\n\nMagicRow.defaultProps = {\n  className: '',\n  style: {},\n  colSizeKey: 'xs',\n  children: null,\n};\n\nexport default MagicRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorPage from './ErrorPage';\n\n/**\n * Renders a `Not found` Error Page with a message and 404 status code\n */\nconst PageNotFound = ({ icon, message, ...props }) => (\n  <ErrorPage {...props} status={404} icon={icon} message={message} />\n);\n\nPageNotFound.propTypes = {\n  /**\n   * Font awesome icon\n   */\n  icon: PropTypes.string,\n  /**\n   * Error message to be shown in the page. It can be a String,\n   * React Component or an node\n   */\n  message: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.string,\n    PropTypes.node,\n  ]),\n};\n\nPageNotFound.defaultProps = {\n  icon: 'frown-o',\n  message: 'The page you requested was not found.',\n};\n\nexport default PageNotFound;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactLoader from 'react-loaders';\n\n/**\n * Renders the React Loader from `react-loaders` library wrapped inside a loader container element.\n */\nexport const Loader = ({ type, active }) => {\n  if (!active) {\n    return null;\n  }\n\n  return (\n    <div className=\"loader-container\">\n      <ReactLoader active={active} type={type} />\n    </div>\n  );\n};\n\nLoader.propTypes = {\n  /**\n   * Specifies the React Loader type\n   */\n  type: PropTypes.string,\n  /**\n   * When this property is set to `false` the loader is not shown.\n   */\n  active: PropTypes.bool,\n};\n\nLoader.defaultProps = {\n  type: 'ball-scale-ripple-multiple',\n  active: true,\n};\n\n/**\n * Renders the Loader component that is vertically and horizontally centered using flex box.\n */\nexport const CenteredLoader = props => (\n  <div\n    style={{\n      height: 400,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }}\n  >\n    <Loader {...props} />\n  </div>\n);\n\nCenteredLoader.propTypes = {\n  /**\n   * Specifies the React Loader type\n   */\n  type: PropTypes.string,\n  /**\n   * When this property is set to `false` the loader is not shown.\n   */\n  active: PropTypes.bool,\n};\n\nCenteredLoader.defaultProps = {\n  type: 'ball-scale-ripple-multiple',\n  active: true,\n};\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorPage from './ErrorPage';\nimport PageNotFound from './PageNotFound';\nimport { CenteredLoader } from './Loaders';\n\n/**\n * Component that can be used to show specific components depending on the current state.\n *\n * If the state is currently loading, the Loading component, if specified, should be shown.\n * In case of an error or that data could not be found, an Error page is displayed.\n * When the state is not loading and there are no errors, the specified component is rendered.\n */\nconst LoadingWrapper = ({\n  component: Child,\n  loader: Loader,\n  loading,\n  error,\n  found,\n  ...props\n}) => {\n  if (loading) {\n    return <Loader />;\n  }\n\n  if (!found) {\n    return <PageNotFound />;\n  }\n\n  if (error) {\n    if (_.isFunction(error)) {\n      const Error = error;\n      return <Error />;\n    }\n    if (_.isPlainObject(error)) {\n      return <ErrorPage {...error} />;\n    }\n    return <ErrorPage message={error} />;\n  }\n\n  return <Child {...props} />;\n};\n\n\nLoadingWrapper.propTypes = {\n  /**\n   * React component that should be rendered inside this wrapper\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]).isRequired,\n  /**\n   * React component that should be shown when `loading` is set to `true`\n   */\n  loader: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  /**\n   * When this prop is `true`, the Loader component is shown\n   */\n  loading: PropTypes.bool,\n  /**\n   * When this prop is `false`, the `PageNotFound` component is shown\n   */\n  found: PropTypes.bool,\n  /**\n   * Error message that should be show. The message is shown using the `ErrorPage` component.\n   * You can pass a component function or a simple message as a string.\n   */\n  error: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.object,\n    PropTypes.string,\n  ]),\n};\n\nLoadingWrapper.defaultProps = {\n  loader: CenteredLoader,\n  loading: false,\n  error: null,\n  found: true,\n};\n\nexport default LoadingWrapper;\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Popover, Tooltip } from 'react-bootstrap';\n\nexport const CHILDREN_PROP_TYPE = PropTypes.oneOfType([\n  PropTypes.arrayOf(PropTypes.node),\n  PropTypes.node,\n  PropTypes.arrayOf(PropTypes.element),\n  PropTypes.element,\n]);\n\n\n// eslint-disable-next-line no-confusing-arrow\nconst debug = func => process.env.NODE_ENV !== 'production' ? func : _.noop;\n\n/**\n * Utility function that creates a Tooltip element with the supplied text.\n *\n * @param {String} text Tooltip text\n * @return {*}\n */\nexport const tooltip = (text) => {\n  if (Tooltip === _.get(text, 'type')) {\n    return text;\n  }\n\n  return (<Tooltip id=\"tooltip\">{text}</Tooltip>);\n};\n\n/**\n * Utility function that creates a Popover element with the supplied title and text.\n *\n * @param {String} title   Popover title\n * @param {String} content Popover contents\n * @return {*}\n */\nexport const popover = (title, content) => (\n  <Popover id=\"popover\" title={title}>{content}</Popover>\n);\n\n/**\n * Verify that a certain expectation is met, or throw a exception otherwise.\n *\n * This is useful for communicating assumptions in the code to other human\n * readers as well as catching bugs that accidentally violates these\n * expectations.\n *\n * Assertions are removed from production builds, so they can be freely added\n * for documentation and debugging purposes without worries of incurring any\n * performance penalty. However, because of that, they should not be used for\n * checks that could reasonably fail during normal usage. Furthermore, care\n * should be taken to avoid accidentally relying on side-effects produced from\n * evaluating the condition itself, since the code will not run in production.\n *\n * @method assert\n * @param condition\n * @param message\n */\nexport const assert = debug((condition, message = '') => {\n  if (!condition) {\n    throw new Error(`Assertion Failed: ${message}`);\n  }\n});\n\n/**\n * Display a deprecation warning with the provided message and a stack trace\n * (Chrome and Firefox only) when the assigned method is called.\n *\n * Calls to this function are removed from production builds, so they can be\n * freely added for documentation and debugging purposes without worries of\n * incurring any performance penalty.\n *\n * @method deprecate\n * @param {String} message A description of the deprecation.\n * @param {Function} func  Function that should be deprecated.\n */\nexport const deprecate = debug((message, func) => function (...args) { // eslint-disable-line func-names\n  const { stack } = new Error();\n  // eslint-disable-next-line no-console\n  console.warn(`DEPRECATION: ${message}\\n\\t${stack.split('\\n').slice(2).join('\\n\\t')}`);\n  return func.apply(this, args);\n});\n","import PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport React, { Component } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { CHILDREN_PROP_TYPE } from '../utils';\n\nconst CHILDREN_PROP_TYPES = {\n  /**\n   * Child components\n   */\n  children: CHILDREN_PROP_TYPE.isRequired,\n};\n\n/**\n * Component that is used to set the document title in the browser\n */\nexport class Page extends Component {\n  componentDidMount() {\n    const { title } = this.props;\n    document.title = title;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      title,\n    } = this.props;\n\n    if (title !== nextProps.title) {\n      document.title = nextProps.title;\n    }\n  }\n\n  render() {\n    const {\n      style,\n      className,\n      children,\n    } = this.props;\n\n    return (\n      <div className={className} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\n\nPage.propTypes = {\n  ...CHILDREN_PROP_TYPES,\n  /**\n   * Page title\n   */\n  title: PropTypes.string,\n  /**\n   * Custom CSS styling\n   */\n  style: PropTypes.object,\n  /**\n   * Additional class names\n   */\n  className: PropTypes.string,\n};\n\nPage.defaultProps = {\n  style: null,\n  title: null,\n  className: null,\n};\n\n/**\n * Renders a top panel used mainly to contain a headline or a page title\n */\nexport const TopPanel = ({ style, className, children }) => (\n  <div className={classnames('page-layout-toppanel', className)} style={style}>\n    {children}\n  </div>\n);\n\nTopPanel.propTypes = {\n  ...CHILDREN_PROP_TYPES,\n  /**\n   * Custom CSS styling\n   */\n  style: PropTypes.object,\n  /**\n   * Additional class names\n   */\n  className: PropTypes.string,\n};\n\nTopPanel.defaultProps = {\n  style: null,\n  className: null,\n};\n\n/**\n * Wrapper around Bootstrap's Row component that makes it behave like flex container.\n * Should be used in conjunction with Left and Right components.\n */\nexport const HorizontalSplit = ({ style, className, children }) => (\n  <Row className={classnames('page-layout-horizontalsplit', className)} style={{ ...style, display: 'flex' }}>\n    {children}\n  </Row>\n);\n\nHorizontalSplit.propTypes = {\n  ...CHILDREN_PROP_TYPES,\n  /**\n   * Custom CSS styling\n   */\n  style: PropTypes.object,\n  /**\n   * Additional class names\n   */\n  className: PropTypes.string,\n};\nHorizontalSplit.defaultProps = { ...TopPanel.defaultProps };\n\n/**\n * Renders a page layout content element\n */\nexport const Content = ({ style, className, children }) => (\n  <div className={classnames('page-layout-content', className)} style={style}>\n    {children}\n  </div>\n);\n\nContent.propTypes = {\n  ...CHILDREN_PROP_TYPES,\n  /**\n   * Custom CSS styling\n   */\n  style: PropTypes.object,\n  /**\n   * Additional class names\n   */\n  className: PropTypes.string,\n};\nContent.defaultProps = { ...TopPanel.defaultProps };\n\n/**\n * Renders a Bootstrap's Col component with defined with, mainly used as a sidebar.\n * Should be used in conjunction with HorizontalSplit and Right components.\n */\nexport const Left = ({\n  contentWidthXs = 8, contentWidthSm = 9, style, className, children,\n}) => (\n  <Col\n    xs={12 - contentWidthXs}\n    md={12 - contentWidthSm}\n    className={classnames('page-layout-horizontalsplit-left', className)}\n    style={style}\n  >\n    {children}\n  </Col>\n);\n\nLeft.propTypes = {\n  ...CHILDREN_PROP_TYPES,\n  /**\n   * Custom CSS styling\n   */\n  style: PropTypes.object,\n  /**\n   * Additional class names\n   */\n  className: PropTypes.string,\n  /**\n   * Width of the Column element for extra small devices\n   */\n  contentWidthXs: PropTypes.number,\n  /**\n   * Width of the Column element for small devices\n   */\n  contentWidthSm: PropTypes.number,\n};\nLeft.defaultProps = { ...TopPanel.defaultProps };\n\n/**\n * Renders a Bootstrap's Col component with defined with that should be pushed to the right side.\n * Should be used in conjunction with HorizontalSplit and Left components.\n */\nexport const Right = ({\n  contentWidthXs = 8, contentWidthSm = 9, style, className, children,\n}) => (\n  <Col\n    xs={contentWidthXs}\n    md={contentWidthSm}\n    className={classnames('page-layout-horizontalsplit-right', className)}\n    style={style}\n  >\n    {children}\n  </Col>\n);\n\nRight.propTypes = {\n  ...CHILDREN_PROP_TYPES,\n  /**\n   * Custom CSS styling\n   */\n  style: PropTypes.object,\n  /**\n   * Additional class names\n   */\n  className: PropTypes.string,\n  /**\n   * Width of the Column element for extra small devices\n   */\n  contentWidthXs: PropTypes.number,\n  /**\n   * Width of the Column element for small devices\n   */\n  contentWidthSm: PropTypes.number,\n};\nRight.defaultProps = { ...Left.defaultProps };\n\n/**\n * Renders an element that is fixed to he bottom right corner.\n */\nexport const Float = ({ children }) => (\n  <div style={{ position: 'fixed', bottom: '5em', right: '5em' }}>\n    {children}\n  </div>\n);\n\nFloat.propTypes = { ...CHILDREN_PROP_TYPES };\n\nexport default {\n  Page,\n  TopPanel,\n  Content,\n  HorizontalSplit,\n  Left,\n  Right,\n  Float,\n};\n","import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst SECONDS = 1000;\n\n/**\n * Individual Notification (using the Bootstrap Alert box)\n */\nexport class NotificationItem extends Component {\n  componentWillMount() {\n    const { timeout } = this.props;\n    if (timeout && setTimeout) {\n      this.timeout = setTimeout(() => this.dismiss(), timeout * SECONDS);\n    }\n  }\n\n  componentWillUnmount() {\n    this.clearTimeout();\n  }\n\n  dismiss() {\n    const { onClose } = this.props;\n    onClose();\n    this.clearTimeout();\n  }\n\n  clearTimeout() {\n    if (clearTimeout) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  render() {\n    const {\n      header,\n      errors,\n      message,\n      bsStyle,\n    } = this.props;\n\n    return (\n      <Alert\n        bsStyle={bsStyle}\n        onDismiss={() => this.dismiss()}\n      >\n        {header && <h4>{header}</h4>}\n        <p>{message}</p>\n        <ul>\n          {_.map(errors, error => (<li key={error}>{error}</li>))}\n        </ul>\n      </Alert>\n    );\n  }\n}\n\nNotificationItem.propTypes = {\n  /**\n   * Alert headline\n   */\n  header: PropTypes.string,\n  /**\n   * Message to display\n   */\n  message: PropTypes.string.isRequired,\n  /**\n   * A list of errors to be rendered in the alert\n   */\n  errors: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * Bootstrap Alert type, e.g. info/success\n   */\n  bsStyle: PropTypes.oneOf(['success', 'info', 'warning', 'danger']),\n  /**\n   * Sets the time in seconds how long should an alert be visible\n   */\n  timeout: PropTypes.number,\n  /**\n   * Callback function executed when alert is dismissed\n   */\n  onClose: PropTypes.func.isRequired,\n};\n\nNotificationItem.defaultProps = {\n  header: null,\n  errors: [],\n  timeout: 30,\n  bsStyle: 'info',\n};\n\n/**\n * Container component creating a NotificationItem for each notification in the Redux store\n */\nexport const NotificationList = ({ alerts, timeout, clearAlert }) => (\n  <div id=\"notification-container\">\n    {_.map(alerts, ({\n      id, header, message, errors, bsStyle,\n    }) => (\n      <NotificationItem\n        key={id}\n        header={header}\n        message={message}\n        errors={errors}\n        bsStyle={bsStyle}\n        timeout={timeout}\n        onClose={() => clearAlert(id)}\n      />\n    ))}\n  </div>\n);\n\nNotificationList.propTypes = {\n  /**\n   * Sets the time in seconds how long should an alert be visible\n   */\n  timeout: PropTypes.number,\n  /**\n   * List of Alerts to be displayed\n   */\n  alerts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    header: PropTypes.string,\n    message: PropTypes.string.isRequired,\n    errors: PropTypes.arrayOf(PropTypes.string),\n    bsStyle: PropTypes.oneOf(['success', 'info', 'warning', 'danger']),\n  })),\n  /**\n   * Callback invoked when an alert has been dismissed\n   */\n  clearAlert: PropTypes.func,\n};\n\nNotificationList.defaultProps = {\n  alerts: [],\n  timeout: 30,\n  clearAlert: () => {},\n};\n\nexport default NotificationList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport { CHILDREN_PROP_TYPE } from '../utils';\n\n/**\n * Component meant for displaying errors below fields in a form\n */\nconst FieldError = ({ style = {}, children = [] }) => (\n  <strong className=\"text-danger\" style={style}>\n    <FontAwesome name=\"warning\" />\n    &nbsp;\n    <span className=\"validation-error\">{children}</span>\n  </strong>\n);\n\nFieldError.propTypes = {\n  /**\n   * Custom CSS style object\n   */\n  style: PropTypes.object,\n  /**\n   * Field Error message\n   */\n  children: CHILDREN_PROP_TYPE.isRequired,\n};\n\nFieldError.defaultProps = {\n  style: null,\n};\n\nexport default FieldError;\n","/* eslint-disable no-confusing-arrow, react/no-array-index-key */\nimport _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ControlLabel,\n  FormGroup,\n  HelpBlock,\n} from 'react-bootstrap';\n\nimport FieldError from './FieldError';\nimport { CHILDREN_PROP_TYPE } from '../utils';\n\n/**\n * Function to define the current validationState of the FormGroup. This is a prop that\n * the FormGroup component in React-Bootstrap expects\n *\n * @param touched Boolean of whether the field has been used (Redux-Form tracks this)\n * @param error Redux form error object\n * @returns {*} - Undefined if the field has not been touched,\n *              - 'error' if an error has been found\n *              - 'success' if there is no error and the field has been touched.\n */\nexport function getValidationState(touched, error) {\n  if (!touched) return undefined;\n  // Ensure the error prop is showing a real error. Sometimes an empty array is passed which still\n  // indicates there are no errors. If this happens we don't want to use an error class.\n  return !_.isEmpty(error) ? 'error' : 'success';\n}\n\n/**\n * Component that wraps Bootstrap's FormGroup, ControlLabel and HelpBlock elements\n * in order to show an Form field.\n *\n * Form field also renders a list of errors using the FieldErrors component.\n */\nconst FormField = ({\n  id, label, help, children, className, meta: { touched, error },\n}) => {\n  const validationState = getValidationState(touched, error);\n  // split the error by new line if it is not an array (a string will come back from the grammar validation,\n  // whereas an array is returned by the Django API). We split the grammar validation into multiple lines so\n  // it will display properly under the field\n  const errors = error && _.isString(error) ? error.split('\\n') : error;\n\n  return (\n    <FormGroup controlId={id} className={className} validationState={validationState}>\n      {label && <ControlLabel>{label}</ControlLabel>}\n\n      {children}\n\n      {help && (\n        <HelpBlock>\n          <small>{help}</small>\n        </HelpBlock>\n      )}\n\n      { // Only show if field is touched and not empty. Sometimes, the error prop is an empty\n        // array so we do not want to show an error for this.\n        touched && !_.isEmpty(error) && (\n          <FieldError>\n            {errors.map((e, i) => i ? <div key={`error-${i}`}>{e}</div> : e)}\n          </FieldError>\n        )\n      }\n    </FormGroup>\n  );\n};\n\nFormField.propTypes = {\n  /**\n   * Input element id\n   */\n  id: PropTypes.any,\n  /**\n   * Input label text\n   */\n  label: PropTypes.string,\n  /**\n   * Input help text\n   */\n  help: PropTypes.string,\n  /**\n   * Metadata object that is passed by the React Form\n   */\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n  }),\n  /**\n   * Additional class name\n   */\n  className: PropTypes.string,\n  /**\n   * The form field component\n   */\n  children: CHILDREN_PROP_TYPE.isRequired,\n};\n\nFormField.defaultProps = {\n  id: null,\n  help: null,\n  label: null,\n  className: null,\n  meta: { touched: false, error: [] },\n};\n\nexport default FormField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'react-bootstrap';\n\nimport FormField from './FormField';\n\n/**\n * Component that renders an HTML Checkbox field\n */\nconst CheckboxField = ({\n  input, label, help, meta, disabled,\n}) => (\n  <FormField id={input.id} help={help} meta={meta}>\n    <Checkbox\n      checked={!!input.value}\n      disabled={disabled}\n      onChange={evt => input.onChange(evt.target.checked)}\n    >\n      {label}\n    </Checkbox>\n  </FormField>\n);\n\nCheckboxField.propTypes = {\n  /**\n   * Original input field passed by the React Form\n   */\n  input: PropTypes.any.isRequired,\n  /**\n   * Input field label\n   */\n  label: PropTypes.string,\n  /**\n   * Help text used to describe the field's purpose\n   */\n  help: PropTypes.string,\n  /**\n   * Is this field disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Metadata object that is passed by the React Form\n   */\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n  }),\n};\n\nCheckboxField.defaultProps = {\n  help: null,\n  label: null,\n  disabled: false,\n  meta: { touched: false, error: [] },\n};\n\nexport default CheckboxField;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  Button,\n  Col,\n  FormControl,\n  Glyphicon,\n  InputGroup,\n  OverlayTrigger,\n} from 'react-bootstrap';\n\nimport { FormSection } from 'redux-form';\n\nimport { MagicRow } from '../../ui';\nimport { Utils } from '../..';\nimport FormField from '../FormField';\n\n\n/**\n * Component that renders a key-value field array.\n */\nconst KeyValueFieldArray = ({\n  fields, meta, label, help, keyField, valueField, emptyMessage,\n}) => (\n  <FormField\n    label={(\n      <span>\n        {label}\n\n        <Button\n          onClick={() => fields.push({})}\n          bsSize=\"xs\"\n          style={{ marginLeft: 6 }}\n        >\n          <Glyphicon glyph=\"plus\" />\n        </Button>\n      </span>\n    )}\n    help={help}\n    meta={meta}\n  >\n    <MagicRow colSizeKey=\"md\">\n      {fields.map((field, idx) => (\n        <Col\n          key={field}\n          xs={12}\n          sm={6}\n          md={4}\n          style={{ marginBottom: 15 }}\n        >\n          <FormSection name={field}>\n            <InputGroup>\n              {keyField}\n\n              <InputGroup.Addon style={{\n                borderLeft: 0,\n                borderRight: 0,\n                padding: '6px 3px',\n              }}\n              />\n\n              {valueField}\n\n              <InputGroup.Button>\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={Utils.tooltip('Remove')}\n                >\n                  <Button onClick={() => fields.remove(idx)}>\n                    <Glyphicon glyph=\"remove\" />\n                  </Button>\n                </OverlayTrigger>\n              </InputGroup.Button>\n            </InputGroup>\n          </FormSection>\n        </Col>\n      ))}\n    </MagicRow>\n\n    {emptyMessage && fields.length === 0 && emptyMessage}\n    <FormControl.Feedback />\n  </FormField>\n);\n\nKeyValueFieldArray.propTypes = {\n  /**\n   * Fields object passed by the React Form\n   */\n  fields: PropTypes.object.isRequired,\n  /**\n   * Input field label\n   */\n  label: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n  ]),\n  /**\n   * Help text used to describe the field's purpose\n   */\n  help: PropTypes.string,\n  /**\n   * Metadata object that is passed by the React Form\n   */\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n  }),\n  /**\n   * The element/text that will be displayed when no element exist\n   */\n  emptyMessage: PropTypes.element,\n  /**\n   * A custom element that will be rendered as the key part.\n   */\n  keyField: PropTypes.element.isRequired,\n  /**\n   * A custom element that will be rendered as the value part.\n   */\n  valueField: PropTypes.element.isRequired,\n};\n\nKeyValueFieldArray.defaultProps = {\n  help: null,\n  label: null,\n  emptyMessage: null,\n  meta: { touched: false, error: [] },\n};\n\nexport default KeyValueFieldArray;\n","import _ from 'lodash';\nimport React, { Component } from 'react';\n\nimport {\n  Glyphicon,\n  OverlayTrigger,\n  Panel,\n} from 'react-bootstrap';\nimport FontAwesome from 'react-fontawesome';\nimport { Utils } from '../../..';\n\n\nclass FieldArrayElement extends Component {\n  constructor({ initiallyMinimized }) {\n    super();\n    this.state = {\n      minimized: initiallyMinimized,\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { label } = this.props;\n    const { minimized } = this.state;\n\n    return _.some([\n      label !== nextProps.label,\n      minimized !== nextState.minimized,\n    ]);\n  }\n\n  setMinimized(minimized) {\n    this.setState(prevState => ({\n      ...prevState,\n      minimized,\n    }));\n  }\n\n  render() {\n    const {\n      label,\n      bsStyle,\n      dragHandleProps,\n      minimizable,\n      duplicable,\n      children,\n      onRemove,\n      onDuplicate,\n    } = this.props;\n\n    const {\n      minimized,\n    } = this.state;\n\n    const style = {\n      height: 'auto',\n      transition: 'all 2s ease-in, overflow 0s 2s',\n    };\n\n    if (minimized) {\n      style.height = 0;\n      style.overflow = 'hidden';\n    }\n\n    return (\n      <Panel bsStyle={bsStyle}>\n        <Panel.Body>\n          <div>\n            {dragHandleProps && (\n              <FontAwesome\n                name=\"arrows\"\n                style={{\n                  fontSize: '150%',\n                  marginRight: 6,\n                }}\n                {...dragHandleProps}\n              />\n            )}\n\n            <h4\n              style={{ display: 'inline' }}\n              className={bsStyle ? `text-${bsStyle}` : undefined}\n            >\n              {label || <i>Unnamed</i>}\n            </h4>\n\n            {onRemove && (\n              <OverlayTrigger\n                placement=\"top\"\n                overlay={Utils.tooltip('Remove')}\n              >\n                <button\n                  type=\"button\"\n                  className=\"pull-right close\"\n                  aria-label=\"Remove\"\n                  style={{ marginRight: 10, fontSize: 15 }}\n                  onClick={onRemove}\n                >\n                  <Glyphicon glyph=\"remove\" />\n                </button>\n              </OverlayTrigger>\n            )}\n\n            {minimizable && (\n              <OverlayTrigger\n                placement=\"top\"\n                overlay={Utils.tooltip(minimized ? 'Maximize' : 'Minimize')}\n              >\n                <button\n                  type=\"button\"\n                  className=\"pull-right close\"\n                  aria-label=\"Minimize\"\n                  style={{ marginRight: 10, fontSize: 15 }}\n                  onClick={() => this.setMinimized(!minimized)}\n                >\n                  <span aria-hidden={minimized}>\n                    <Glyphicon glyph={minimized ? 'plus' : 'minus'} />\n                  </span>\n                </button>\n              </OverlayTrigger>\n            )}\n\n            {duplicable && (\n              <OverlayTrigger\n                placement=\"top\"\n                overlay={Utils.tooltip('Duplicate')}\n              >\n                <button\n                  type=\"button\"\n                  className=\"pull-right close\"\n                  aria-label=\"Duplicate\"\n                  style={{ marginRight: 10, fontSize: 15 }}\n                  onClick={onDuplicate}\n                >\n                  <Glyphicon glyph=\"duplicate\" />\n                </button>\n              </OverlayTrigger>\n            )}\n          </div>\n\n          <div style={{ marginTop: minimized ? 0 : 10 }}>\n            <div style={style}>\n              {children}\n            </div>\n          </div>\n        </Panel.Body>\n      </Panel>\n    );\n  }\n}\n\n\nexport default FieldArrayElement;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport {\n  DragDropContext,\n  Draggable,\n  Droppable,\n} from 'react-beautiful-dnd';\n\n\nexport default class SortableList extends Component {\n  static propTypes = {\n    direction: PropTypes.string.isRequired,\n    onDragEnd: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const {\n      direction = 'vertical',\n      type,\n      onDragEnd,\n      dragHandle,\n      children,\n    } = this.props;\n\n    return (\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable\n          droppableId=\"droppable\"\n          type={type}\n          direction={direction}\n        >\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              className={classNames('drag-list', direction, { dropping: snapshot.isDraggingOver })}\n            >\n              {React.Children.map(children, (child, index) => (\n                <Draggable\n                  key={child.key}\n                  draggableId={child.key}\n                  index={index}\n                >\n                  {(providedDraggable, draggableSnapshot) => (\n                    <div\n                      ref={providedDraggable.innerRef}\n                      {...providedDraggable.draggableProps}\n                      className={classNames('drag-item', { dragging: draggableSnapshot.isDraggingOver })}\n                    >\n                      {dragHandle ? (\n                        React.cloneElement(child, { dragHandleProps: providedDraggable.dragHandleProps })\n                      ) : (\n                        <div {...providedDraggable.dragHandleProps}>\n                          {child}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n","import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport {\n  FormControl,\n  Glyphicon,\n  OverlayTrigger,\n} from 'react-bootstrap';\nimport { DropdownButton } from '../../../ui';\nimport { Utils } from '../../..';\n\nimport FormField from '../../FormField';\nimport FieldArrayElement from './FieldArrayElement';\nimport SortableList from './SortableList';\n\n\n/**\n * Component that renders a vertical field array using the provided innerComponent prop as its elements.\n */\nclass VerticalFieldArray extends Component {\n  static propTypes = {\n    /**\n     * Fields object passed by the React Form\n     */\n    fields: PropTypes.object.isRequired,\n    /**\n     * Input field label\n     */\n    label: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.element,\n    ]),\n    /**\n     * Help text used to describe the field's purpose\n     */\n    help: PropTypes.string,\n    /**\n     * Metadata object that is passed by the React Form\n     */\n    meta: PropTypes.shape({\n      touched: PropTypes.bool,\n      error: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.array,\n      ]),\n    }),\n    /**\n     * The element/text that will be displayed when no element exist\n     */\n    emptyMessage: PropTypes.element,\n    /**\n     * The component that will be rendered as an element\n     */\n    innerComponent: PropTypes.element.isRequired,\n    /**\n     * This label is used in the default renderKey prop. It is the prefix used in the element name\n     */\n    labelDefault: PropTypes.string,\n    /**\n     * The tooltip that will be displayed when hovering over the add button\n     */\n    addTooltip: PropTypes.string,\n    /**\n     * If elements are able to be minimized or not\n     */\n    minimizable: PropTypes.bool,\n    /**\n     * If elements are able to be duplicated or not\n     */\n    duplicable: PropTypes.bool,\n    /**\n     * If elements are able to be sorted or not\n     */\n    sortable: PropTypes.bool,\n    /**\n     * A function that receives the value object and its index and returns a key prop that will be used by the\n     * element\n     */\n    // eslint-disable-next-line react/require-default-props\n    renderKey: PropTypes.func,\n    /**\n     * A function that receives the value object and its index and returns an element to be displayed as the element\n     * header\n     */\n    // eslint-disable-next-line react/require-default-props\n    renderLabel: PropTypes.func,\n    /**\n     * The initial field object that should be used when onAdd is not defined.\n     */\n    initialFieldValue: PropTypes.object,\n    /**\n     * Callback function that transforms and adds a new element. If not defined, initialFieldValue will be used\n     * instead. Callback receives no argument and should return the new object object.\n     */\n    onAdd: PropTypes.func,\n    /**\n     * Callback function that transforms the current element into a duplicated one and adds it. Callback receives\n     * the current object as argument and should return the new object.\n     */\n    onDuplicate: PropTypes.func,\n  };\n\n  static defaultProps = {\n    help: null,\n    label: null,\n    emptyMessage: null,\n    meta: { touched: false, error: [] },\n    labelDefault: 'New',\n    addTooltip: 'Click to add',\n    minimizable: true,\n    duplicable: false,\n    sortable: false,\n    initialFieldValue: {},\n    onAdd: null,\n    onDuplicate: null,\n  };\n\n  state = {\n    firstRender: true,\n  };\n\n  componentDidMount() {\n    this.setState({ firstRender: false });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const {\n      fields,\n    } = this.props;\n\n    return _.some([\n      !_.isEqual(fields.getAll() !== nextProps.fields.getAll()),\n    ]);\n  }\n\n  renderField(field, index) {\n    const\n      {\n        fields,\n        innerComponent: InnerComponent,\n        innerProps,\n        labelDefault,\n        renderKey = (value, idx) => idx,\n        renderLabel = (value, idx) => `${labelDefault} ${idx + 1}`,\n        bsStyle,\n        minimizable,\n        duplicable,\n        onDuplicate,\n        onRemove,\n        innerRef,\n      } = this.props;\n\n\n    const {\n      firstRender,\n    } = this.state;\n\n    const value = fields.get(index);\n    const key = renderKey(value, index);\n    const label = renderLabel(value, index);\n\n    const content = (\n      <InnerComponent\n        {...innerProps}\n        index={index}\n        field={field}\n        ref={/* Work with @connected components */\n          ref => innerRef && innerRef(_.get(ref, 'refs.wrappedInstance', ref))\n        }\n      />\n    );\n\n    return (\n      <FieldArrayElement\n        key={key}\n        label={label}\n        bsStyle={bsStyle}\n        initiallyMinimized={minimizable && firstRender}\n        minimizable={minimizable}\n        duplicable={duplicable}\n        onRemove={() => {\n          if (onRemove) onRemove(index);\n          fields.remove(index);\n        }}\n        onDuplicate={() => {\n          const currentValue = fields.get(index);\n          const item = onDuplicate ? onDuplicate(currentValue) : currentValue;\n          fields.push(item);\n        }}\n      >\n        {content}\n      </FieldArrayElement>\n    );\n  }\n\n  render() {\n    const\n      {\n        label,\n        fields,\n        meta,\n        help,\n        initialFieldValue,\n        sortable,\n        addTooltip,\n        addChoices,\n        onAdd,\n        emptyMessage,\n      } = this.props;\n\n    const pushItem = (selected) => {\n      const item = onAdd ? onAdd(selected) : initialFieldValue;\n      fields.push(item);\n    };\n\n    const fieldArray = fields.map((field, index) => this.renderField(field, index));\n\n    return (\n      <FormField\n        label={(\n          <span>\n            {label}\n          </span>\n        )}\n        help={help}\n        meta={meta}\n      >\n        {sortable ? (\n          <SortableList\n            dragHandle\n            onDragEnd={({ source, destination }) => {\n              if (!destination) {\n                return null;\n              }\n\n              return fields.move(source.index, destination.index);\n            }}\n          >\n            {fieldArray}\n          </SortableList>\n        ) : (\n          fieldArray\n        )}\n\n        {emptyMessage && fields.length === 0 && (\n          <div style={{ textAlign: 'center', margin: '10px 0px' }}>{emptyMessage}</div>\n        )}\n        <OverlayTrigger\n          placement=\"top\"\n          overlay={Utils.tooltip(addTooltip)}\n        >\n          <DropdownButton\n            id=\"field-list-add-button-bottom\"\n            className=\"text-center\"\n            title={<Glyphicon glyph=\"plus\" />}\n            style={{ display: 'block' }}\n            bsStyle=\"primary\"\n            disabled={addChoices && addChoices.length === 0}\n            onSelect={pushItem}\n          >\n            {addChoices}\n          </DropdownButton>\n        </OverlayTrigger>\n        <FormControl.Feedback />\n      </FormField>\n    );\n  }\n}\n\nexport default VerticalFieldArray;\n","import VerticalFieldArray from './VerticalFieldArray';\n\nexport default VerticalFieldArray;\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormControl } from 'react-bootstrap';\n\nimport FormField from './FormField';\n\n/**\n * Generalized Form Control component.\n *\n * Different component types are usable via the componentClass parameter.  When component is undefined, it'll\n * default as a text field.  Other options:\n *  - textarea\n *  - select (but use the SelectField component instead)\n */\nconst InputField = ({\n  input, label, help, meta, onChangeValue, componentClass, ...props\n}) => (\n  <FormField id={input.id} label={label} help={help} meta={meta}>\n    <FormControl\n      {...input}\n      {...props}\n      componentClass={componentClass}\n      onChange={(selected) => {\n        input.onChange(selected);\n        onChangeValue(selected);\n      }}\n    />\n    <FormControl.Feedback />\n  </FormField>\n);\n\nInputField.propTypes = {\n  /**\n   * Original input field passed by the React Form\n   */\n  input: PropTypes.any.isRequired,\n  /**\n   * Input field label\n   */\n  label: PropTypes.string,\n  /**\n   * Help text used to describe the field's purpose\n   */\n  help: PropTypes.string,\n  /**\n   * Metadata object that is passed by the React Form\n   */\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n  }),\n  /**\n   * Custom element type for this field\n   */\n  componentClass: FormControl.propTypes.componentClass,\n  /**\n   * Callback function that returns the value of the input when it's changed\n   */\n  onChangeValue: PropTypes.func,\n};\n\nInputField.defaultProps = {\n  help: null,\n  label: null,\n  meta: { touched: false, error: [] },\n  onChangeValue: _.noop,\n  componentClass: 'input',\n};\n\nexport default InputField;\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InputField from './InputField';\n\nconst PasswordField = ({\n  input, label, placeholder, help, meta, disabled, onChangeValue,\n}) => (\n  <InputField\n    type=\"password\"\n    input={input}\n    label={label}\n    help={help}\n    meta={meta}\n    disabled={disabled}\n    placeholder={placeholder}\n    onChange={onChangeValue}\n  />\n);\n\nPasswordField.propTypes = {\n  /**\n   * Original input field passed by the React Form\n   */\n  input: PropTypes.any.isRequired,\n  /**\n   * Input field label\n   */\n  label: PropTypes.string,\n  /**\n   * Help text used to describe the field's purpose\n   */\n  help: PropTypes.string,\n  /**\n   * Callback function that returns the value of the input when it's changed\n   */\n  onChangeValue: PropTypes.func,\n  /**\n   * Is this field disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Placeholder text for textarea input field\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Metadata object that is passed by the React Form\n   */\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n  }),\n};\n\nPasswordField.defaultProps = {\n  help: null,\n  label: null,\n  disabled: false,\n  placeholder: null,\n  onChangeValue: _.noop,\n  meta: { touched: false, error: [] },\n};\n\nexport default PasswordField;\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InputRange from 'react-input-range';\nimport FormField from './FormField';\n\nconst parse = value => _.toNumber(value);\n\nconst RangeField = ({\n  input, label, formatLabel, disabled, help, min, max, step, meta, onChangeValue,\n}) => (\n  <FormField id={input.id} label={label} help={help} meta={meta}>\n    <InputRange\n      value={parse(input.value)}\n      style={{\n        display: 'block',\n        width: '100%',\n      }}\n      min={min}\n      max={max}\n      step={step}\n      disabled={disabled}\n      formatLabel={formatLabel}\n      onChange={(value) => {\n        input.onChange(value);\n        onChangeValue(value);\n      }}\n      onChangeComplete={value => input.onBlur(value)}\n    />\n  </FormField>\n);\n\nRangeField.propTypes = {\n  /**\n   * Original input field passed by the React Form\n   */\n  input: PropTypes.any.isRequired,\n  /**\n   * Minimum value\n   */\n  min: PropTypes.number.isRequired,\n  /**\n   * Maximum value\n   */\n  max: PropTypes.number.isRequired,\n  /**\n   * Counter step\n   */\n  step: PropTypes.number,\n  /**\n   * Input field label\n   */\n  label: PropTypes.string,\n  /**\n   * Function used to format the range input label\n   */\n  formatLabel: PropTypes.func,\n  /**\n   * Help text used to describe the field's purpose\n   */\n  help: PropTypes.string,\n  /**\n   * Is this field disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Callback function that returns the value of the input when it's changed\n   */\n  onChangeValue: PropTypes.func,\n  /**\n   * Metadata object that is passed by the React Form\n   */\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n  }),\n};\n\nRangeField.defaultProps = {\n  step: 1,\n  help: null,\n  label: null,\n  disabled: false,\n  onChangeValue: _.noop,\n  formatLabel: _.identity,\n  meta: { touched: false, error: [] },\n};\n\nexport default RangeField;\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Select from '../ui/Select';\nimport FormField from './FormField';\n\n/**\n * Component that encapsulates the `react-select` component\n */\nconst SelectField = ({\n  input,\n  label,\n  defaultValue,\n  help,\n  meta,\n  options,\n  valueKey,\n  isLoading,\n  clearable,\n  multi,\n  creatable,\n  async,\n  onChangeValue,\n  innerRef,\n  onChangeWithValue = true,\n  denormalize,\n  ...props\n}) => {\n  const denormalized = (denormalize ? denormalize(input.value) : input.value) || defaultValue;\n\n  return (\n    <FormField id={input.id} label={label} help={help} meta={meta}>\n      <Select\n        value={denormalized}\n        options={options}\n        clearable={clearable}\n        multi={multi}\n        onChange={(selection) => {\n          let value = selection;\n\n          // Passing the onChangeWithValue prop means the React-Select 'value' key will be used\n          // onChangeValue.  If this is false, the entire option object is stored, meaning additional data\n          // can be stored onChangeValue if needed.\n          if (onChangeWithValue) {\n            value = multi\n              ? selection && _.map(selection, valueKey)\n              : selection && selection[valueKey];\n          }\n\n          input.onChange(value);\n          onChangeValue(value);\n        }}\n        onBlur={() => input.onBlur()}\n        onFocus={() => input.onFocus()}\n        isLoading={isLoading}\n        ref={innerRef}\n        {...props}\n      />\n    </FormField>\n  );\n};\n\nSelectField.propTypes = {\n  /**\n   * Original input field passed by the React Form\n   */\n  input: PropTypes.any.isRequired,\n  /**\n   * Input field label\n   */\n  label: PropTypes.string,\n  /**\n   * Help text used to describe the field's purpose\n   */\n  help: PropTypes.string,\n  /**\n   * Metadata object that is passed by the React Form\n   */\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n  }),\n  /**\n   * Key used to extract the value from the options object. Defaults to `value`\n   */\n  valueKey: PropTypes.string,\n  /**\n   * Default value for the select field\n   */\n  defaultValue: PropTypes.string,\n  /**\n   * Available select options\n   */\n  options: PropTypes.arrayOf(PropTypes.any),\n  /**\n   * Should the component show a loading indicator\n   */\n  isLoading: PropTypes.bool,\n  /**\n   * Can a value be deselected\n   */\n  clearable: PropTypes.bool,\n  /**\n   * Could a\n   */\n  creatable: PropTypes.bool,\n  /**\n   * Is the data loaded asynchronously\n   */\n  async: PropTypes.bool,\n  /**\n   * Function that can transform the original input value\n   */\n  denormalize: PropTypes.bool,\n  /**\n   * Callback executed when a value is selected\n   */\n  onChangeValue: PropTypes.func,\n  /**\n   * Passing the onChangeWithValue prop means the React-Select 'value' key will be used\n   * onChangeValue.\n   *\n   * If this is false, the entire option object is stored, meaning additional data\n   * can be stored onChangeValue if needed.\n   */\n  onChangeWithValue: PropTypes.bool,\n};\n\nSelectField.defaultProps = {\n  help: null,\n  label: null,\n  meta: { touched: false, error: [] },\n  defaultValue: null,\n  valueKey: 'value',\n  options: [],\n  isLoading: false,\n  clearable: false,\n  creatable: false,\n  async: false,\n  denormalize: false,\n  onChangeValue: () => {},\n  onChangeWithValue: true,\n};\n\nexport default SelectField;\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InputField from './InputField';\n\n/**\n * A generic numeric spinner input Redux Form component which uses a React Bootstrap FormControl.\n * This component is meant to be passed into a Redux Forms Field component.\n */\nconst SpinnerField = ({\n  input, label, placeholder, min, max, step, disabled, help, meta, onChangeValue,\n}) => (\n  <InputField\n    componentClass=\"input\"\n    type=\"number\"\n    placeholder={placeholder}\n    input={input}\n    label={label}\n    min={min}\n    max={max}\n    step={step || 1}\n    help={help}\n    meta={meta}\n    disabled={disabled}\n    onChange={onChangeValue}\n  />\n);\n\nSpinnerField.propTypes = {\n  /**\n   * Original input field passed by the React Form\n   */\n  input: PropTypes.any.isRequired,\n  /**\n   * Minimum value\n   */\n  min: PropTypes.number.isRequired,\n  /**\n   * Maximum value\n   */\n  max: PropTypes.number.isRequired,\n  /**\n   * Counter step\n   */\n  step: PropTypes.number,\n  /**\n   * Input field label\n   */\n  label: PropTypes.string,\n  /**\n   * Help text used to describe the field's purpose\n   */\n  help: PropTypes.string,\n  /**\n   * Callback function that returns the value of the input when it's changed\n   */\n  onChangeValue: PropTypes.func,\n  /**\n   * Is this field disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Placeholder text for textarea input field\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Metadata object that is passed by the React Form\n   */\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n  }),\n};\n\nSpinnerField.defaultProps = {\n  step: 1,\n  help: null,\n  label: null,\n  disabled: false,\n  placeholder: null,\n  onChangeValue: _.noop,\n  meta: { touched: false, error: [] },\n};\n\nexport default SpinnerField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Col,\n  Row,\n  Button,\n  ButtonToolbar,\n} from 'react-bootstrap';\nimport FieldError from './FieldError';\n\n/**\n * Renders a Bootstrap Row component with a Button toolbar on the right hand side.\n * Toolbar contains 2 buttons, one that would reset the form state and one that would\n * submit the form data.\n */\nconst SubmitResetRow = ({\n  enabled, pristine, submitting, submitFailed, error, valid, reset,\n}) => (\n  <Row>\n    <Col xs={12}>\n      <ButtonToolbar className=\"pull-right\">\n        <Button\n          bsStyle=\"warning\"\n          bsSize=\"large\"\n          disabled={pristine || submitting}\n          onClick={reset}\n        >\n          Reset\n        </Button>\n        <Button\n          bsStyle=\"primary\"\n          bsSize=\"large\"\n          type=\"submit\"\n          disabled={enabled === false || submitting}\n        >\n          Submit\n        </Button>\n      </ButtonToolbar>\n\n      {error\n        ? <FieldError>{error}</FieldError>\n        : (submitFailed && !valid) && <FieldError>The form is invalid. Please fix any errors.</FieldError>}\n    </Col>\n  </Row>\n);\n\nSubmitResetRow.propTypes = {\n  /**\n   * Is the form enabled\n   */\n  enabled: PropTypes.bool,\n  /**\n   * When this property is `false` it means that the forms field values\n   * have been changed. Meaning the form is in a `dirty` state.\n   */\n  pristine: PropTypes.bool,\n  /**\n   * Is the form being submitted\n   */\n  submitting: PropTypes.bool,\n  /**\n   * When this property is `true` it means the form submit hook threw an error\n   */\n  submitFailed: PropTypes.bool,\n  /**\n   * When this property is `false` it means that the forms has invalid values\n   */\n  valid: PropTypes.bool,\n  /**\n   * Error message to be shown in the component\n   */\n  error: PropTypes.string,\n  /**\n   * Callback function invoked when the reset button is clicked\n   */\n  reset: PropTypes.func.isRequired,\n};\n\nSubmitResetRow.defaultProps = {\n  enabled: true,\n  pristine: true,\n  submitting: false,\n  submitFailed: false,\n  valid: true,\n  error: null,\n};\n\nexport default SubmitResetRow;\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport InputField from './InputField';\n\n/**\n * Component that renders the Textarea input field\n */\nconst TextAreaField = ({\n  input, label, placeholder, rows, cols, help, meta, disabled, onChangeValue,\n}) => (\n  <InputField\n    input={input}\n    label={label}\n    help={help}\n    meta={meta}\n    rows={rows}\n    cols={cols}\n    disabled={disabled}\n    placeholder={placeholder}\n    onChange={onChangeValue}\n    componentClass=\"textarea\"\n  />\n);\n\nTextAreaField.propTypes = {\n  /**\n   * Original input field passed by the React Form\n   */\n  input: PropTypes.any.isRequired,\n  /**\n   * Input field label\n   */\n  label: PropTypes.string,\n  /**\n   * Help text used to describe the field's purpose\n   */\n  help: PropTypes.string,\n  /**\n   * Callback function that returns the value of the input when it's changed\n   */\n  onChangeValue: PropTypes.func,\n  /**\n   * Is this field disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Placeholder text for textarea input field\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Number of columns that this textarea should have\n   */\n  cols: PropTypes.number,\n  /**\n   * Number of rows that this textarea should have\n   */\n  rows: PropTypes.number,\n  /**\n   * Metadata object that is passed by the React Form\n   */\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n  }),\n};\n\nTextAreaField.defaultProps = {\n  help: null,\n  label: null,\n  disabled: false,\n  placeholder: null,\n  cols: 6,\n  rows: 4,\n  onChangeValue: _.noop,\n  meta: { touched: false, error: [] },\n};\n\nexport default TextAreaField;\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport InputField from './InputField';\n\n/**\n * Component that renders an HTML input field\n */\nconst TextField = ({\n  input, label, placeholder, help, meta, disabled, type, onChangeValue,\n}) => (\n  <InputField\n    type={type}\n    input={input}\n    label={label}\n    help={help}\n    meta={meta}\n    disabled={disabled}\n    placeholder={placeholder}\n    onChange={onChangeValue}\n  />\n);\n\nTextField.propTypes = {\n  /**\n   * Original input field passed by the React Form\n   */\n  input: PropTypes.any.isRequired,\n  /**\n   * Input type\n   */\n  type: PropTypes.string,\n  /**\n   * Input field label\n   */\n  label: PropTypes.string,\n  /**\n   * Help text used to describe the field's purpose\n   */\n  help: PropTypes.string,\n  /**\n   * Callback function that returns the value of the input when it's changed\n   */\n  onChangeValue: PropTypes.func,\n  /**\n   * Is this field disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Placeholder text for textarea input field\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Metadata object that is passed by the React Form\n   */\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n  }),\n};\n\nTextField.defaultProps = {\n  help: null,\n  label: null,\n  disabled: false,\n  placeholder: null,\n  type: 'text',\n  onChangeValue: _.noop,\n  meta: { touched: false, error: [] },\n};\n\nexport default TextField;\n","import _ from 'lodash';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport {\n  Dropdown,\n  SafeAnchor,\n  FormControl,\n} from 'react-bootstrap';\n\n/**\n * Function used to format the year and month value into a display string value\n * that is shown in the input field.\n *\n * Eg: 2019, 12 -> December, 2019\n */\nconst format = (year, month) => moment({ year, month }).format('MMMM, YYYY');\n\n/**\n * Function used to parse a string value into an object containing the year, month\n * and display values.\n *\n * In case the value is invalid or missing, current year and month are taken as default.\n *\n * @param {String} value Year Month value, eg: 2019-12\n * @returns {Object} State object\n */\nconst toState = (value) => {\n  let month;\n  let year;\n\n  if (_.isString(value)) {\n    ([year, month] = value.split('-'));\n  }\n\n  if (!year || !month) {\n    const date = new Date();\n    year = date.getFullYear();\n    month = date.getMonth();\n  }\n\n  return {\n    display: format(year, month),\n    month: parseInt(month, 10),\n    year: parseInt(year, 10),\n  };\n};\n\n/**\n * Year and Month Picker Component that shows a dropdown where you can select a\n * specific month in year.\n */\nclass MonthPicker extends Component {\n  constructor(props, ...args) {\n    super(props, ...args);\n\n    this.onToggle = this.onToggle.bind(this);\n\n    this.state = {\n      opened: false,\n      months: moment.monthsShort(),\n      ...toState(props.value),\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { value } = this.props;\n    if (value !== nextProps.value) {\n      this.setState(toState(nextProps.value));\n    }\n  }\n\n  onClose() {\n    const { onClose } = this.props;\n    this.execute(onClose);\n  }\n\n  onChange() {\n    const { onChange } = this.props;\n    this.execute(onChange);\n  }\n\n  onSelect(month) {\n    this.setState(state => ({\n      ...state,\n      month,\n      opened: false,\n      display: format(state.year, month),\n    }), this.onChange);\n  }\n\n  onYearChange(diff) {\n    this.setState(state => ({\n      ...state,\n      year: state.year + diff,\n      display: format(state.year + diff, state.month),\n    }));\n  }\n\n  onToggle(opened, event, { source }) {\n    if (source === 'click') {\n      this.setState({ opened }); // when toggle button is clicked\n    } else if (source === 'rootClose') {\n      this.setState({ opened: false }, this.onClose); // when body is clicked close the dialog\n    }\n  }\n\n  execute(callback) {\n    const { year, month } = this.state;\n    if (_.isFunction(callback)) {\n      callback(moment({ year, month }).format('YYYY-MM'), year, month);\n    }\n  }\n\n  render() {\n    const {\n      opened, year, month, months, display,\n    } = this.state;\n\n    return (\n      <Dropdown\n        readOnly\n        open={opened}\n        id=\"month-dropdown\"\n        className=\"month-picker\"\n        onToggle={this.onToggle}\n      >\n        <Dropdown.Toggle useAnchor noCaret>\n          <FormControl\n            value={display}\n            componentClass=\"input\"\n          />\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu className=\"month-picker-body\">\n          <div className=\"month-picker-header\">\n            <SafeAnchor onClick={() => this.onYearChange(-1)}>\n              <FontAwesome name=\"chevron-left\" />\n            </SafeAnchor>\n            <span className=\"month-picker-year\">{year}</span>\n            <SafeAnchor onClick={() => this.onYearChange(1)}>\n              <FontAwesome name=\"chevron-right\" />\n            </SafeAnchor>\n          </div>\n          <ul className=\"month-picker-months\">\n            {months.map((value, i) => (\n              <li key={value}>\n                <SafeAnchor\n                  className={i === month && 'active'}\n                  onClick={() => this.onSelect(i)}\n                >\n                  {value}\n                </SafeAnchor>\n              </li>\n            ))}\n          </ul>\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nMonthPicker.propTypes = {\n  /**\n   * Year-Month value, needs to be formated like this: YYYY-MM(2019-11)\n   */\n  value: PropTypes.string,\n  /**\n   * Callback invoked when the dropdown menu closes. This function is invoked with\n   * formatted string value, year and month arguments.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback invoked when either month or year value changes. This function is invoked with\n   * formatted string value, year and month arguments.\n   */\n  onChange: PropTypes.func,\n};\n\nMonthPicker.defaultProps = {\n  value: '',\n  onClose: _.noop,\n  onChange: _.noop,\n};\n\nexport default MonthPicker;\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormControl } from 'react-bootstrap';\n\nimport MonthPicker from '../ui/MonthPicker';\nimport FormField from './FormField';\n\n/**\n * Component that encapsulates the Month Picker component as Redux Form field component.\n */\nconst MonthPickerField = ({\n  input, label, help, meta, onChangeValue, ...props\n}) => (\n  <FormField id={input.id} label={label} help={help} meta={meta}>\n    <MonthPicker\n      name={input.name}\n      value={input.value}\n      {...props}\n      onClose={input.onBlur}\n      onChange={(selected) => {\n        input.onChange(selected);\n        onChangeValue(selected);\n      }}\n    />\n    <FormControl.Feedback />\n  </FormField>\n);\n\nMonthPickerField.propTypes = {\n  /**\n   * Original input field passed by the React Form\n   */\n  input: PropTypes.any.isRequired,\n  /**\n   * Input field label\n   */\n  label: PropTypes.string,\n  /**\n   * Help text used to describe the field's purpose\n   */\n  help: PropTypes.string,\n  /**\n   * Metadata object that is passed by the React Form\n   */\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n  }),\n  /**\n   * Callback function that returns the value of the input when it's changed\n   */\n  onChangeValue: PropTypes.func,\n};\n\nMonthPickerField.defaultProps = {\n  help: null,\n  label: null,\n  meta: { touched: false, error: [] },\n  onChangeValue: _.noop,\n};\n\nexport default MonthPickerField;\n","/* eslint-disable consistent-return */\nimport _ from 'lodash';\nimport { assert } from '../utils';\n\nconst TEMPLATE_REGEX = /{(\\d+)}/g;\nconst ALPHANUMERIC_REGEX = /^[a-zA-Z\\s+\\-_]*$/;\n\n// URL Regex Table: https://mathiasbynens.be/demo/url-regex\n// Source code: https://gist.github.com/dperini/729294\nconst URL_REGEX = new RegExp('^'\n    // protocol identifier (optional)\n    // short syntax // still required\n    + '(?:(?:(?:https?|ftp):)?\\\\/\\\\/)'\n    // user:pass BasicAuth (optional)\n    + '(?:\\\\S+(?::\\\\S*)?@)?'\n    + '(?:'\n      // IP address exclusion\n      // private & local networks\n      + '(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})'\n      + '(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})'\n      + '(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})'\n      // IP address dotted notation octets\n      // excludes loopback network 0.0.0.0\n      // excludes reserved space >= 224.0.0.0\n      // excludes network & broacast addresses\n      // (first & last IP address of each class)\n      + '(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])'\n      + '(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}'\n      + '(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))'\n    + '|'\n      // host & domain names, may end with dot\n      // can be replaced by a shortest alternative\n      // (?![-_])(?:[-\\\\w\\\\u00a1-\\\\uffff]{0,63}[^-_]\\\\.)+\n      + '(?:'\n        + '(?:'\n          + '[a-z0-9\\\\u00a1-\\\\uffff]'\n          + '[a-z0-9\\\\u00a1-\\\\uffff_-]{0,62}'\n        + ')?'\n        + '[a-z0-9\\\\u00a1-\\\\uffff]\\\\.'\n      + ')+'\n      // TLD identifier name, may end with dot\n      + '(?:[a-z\\\\u00a1-\\\\uffff]{2,}\\\\.?)'\n    + ')'\n    // port number (optional)\n    + '(?::\\\\d{2,5})?'\n    // resource path (optional)\n    + '(?:[/?#]\\\\S*)?'\n  + '$', 'i');\n\n/**\n * Formats the error message template.\n *\n * @example\n * formatTemplate('Value {0} is not a {1}', ['value', 'number']);\n * -> `Value foo is not a number`\n *\n * @param {String} template Error template\n * @param {Array}  args     Arguments used to replace the placeholders in the template\n * @return {String} Formatted string\n */\nexport const formatTemplate = (template, args) => template.replace(TEMPLATE_REGEX, (match, number) => {\n  if (_.isUndefined(args[number])) {\n    return match;\n  }\n  return args[number];\n});\n\n/**\n * Required value, for strings and arrays this also enforces that the value is not empty\n *\n * @param {String} errorTemplate Error message template\n * @return {String|undefined}\n */\nexport const required = (errorTemplate = 'Required') => (value) => {\n  if (_.isNull(value) || _.isUndefined(value) || (_.isString(value) && !value.trim())) {\n    return errorTemplate;\n  }\n  if ((_.isArray(value) || _.isObject(value)) && _.isEmpty(value)) {\n    return errorTemplate;\n  }\n};\n\n/**\n * Checks if the value matches the provided regular expression (pattern)\n *\n * @param {RegExp} pattern       Regular expression\n * @param {String} errorTemplate Error message template\n * @return {String|undefined}\n */\nexport const regex = (pattern, errorTemplate = 'Must match the pattern {0}') => {\n  assert(_.isRegExp(pattern), 'Pattern arg must be a regex');\n\n  return (value) => {\n    // Empty values are allowed\n    if (_.isNull(value) || _.isUndefined(value)) {\n      return;\n    }\n    if (!_.isString(value) || !value.match(pattern)) {\n      return formatTemplate(errorTemplate, [pattern]);\n    }\n  };\n};\n\n/**\n * Checks if the value is a valid URL\n *\n * @param {String} errorTemplate Error message template\n * @return {String|undefined}\n */\nexport const url = (errorTemplate = 'May contain only letters, numbers, dashes and underscores') => regex(\n  URL_REGEX, errorTemplate,\n);\n\n/**\n * Checks if the value is a valid alphanumeric string\n *\n * @param {String} errorTemplate Error message template\n * @return {String|undefined}\n */\nexport const alpha = (errorTemplate = 'May contain only letters, underscores, dashes and spaces') => regex(\n  ALPHANUMERIC_REGEX, errorTemplate,\n);\n\n/**\n * Checks if the value is contained in a list of accepted values\n *\n * @param {Array} values Allowed values\n * @return {String|undefined}\n */\nexport const containing = (values = []) => (value) => {\n  if (!_.includes(values, value)) {\n    return `The following values are allowed: [${_.join(values, ', ')}]`;\n  }\n};\n\n/**\n * Checks if the value is not contained in a list of values\n *\n * @param {Array} values Disallowed values\n * @return {String|undefined}\n */\nexport const excluding = (values = []) => (value) => {\n  if (_.includes(values, value)) {\n    return `The following values are not allowed: [${_.join(values, ', ')}]`;\n  }\n};\n\nfunction isValidLimitArg(limit) {\n  return _.isInteger(limit) && limit >= 0;\n}\n\nfunction getLength(value) {\n  switch (typeof value) {\n    case 'number':\n      return value;\n\n    case 'string':\n      // check if it's a number\n      // eslint-disable-next-line no-case-declarations\n      const number = _.toNumber(value);\n      if (_.isNaN(number)) {\n        return value.length;\n      }\n      return value;\n\n    case 'object':\n      // typeof null === \"object\", let's ignore it\n      if (_.isNull(value)) {\n        return;\n      }\n\n      return _.size(value);\n    case 'boolean':\n      return;\n    default:\n      throw new Error(`Could not get length from value: '${value}'.`);\n  }\n}\n\nconst validateLength = (validate, formatError) => (value) => {\n  if (_.isNull(value) || _.isUndefined(value)) {\n    return;\n  }\n\n  const length = getLength(value);\n\n  if (_.isUndefined(length) || !validate(length)) {\n    return formatError(value);\n  }\n};\n\nconst minErrorTemplates = {\n  number: 'Must be at least {0}',\n  string: 'Must contain at least {0} characters',\n  object: 'Must contain at least {0} items',\n};\n\n/**\n * Checks if the value is not lower than the allowed minimum value\n *\n * @param {Number} limit         Minimum value\n * @param {String} errorTemplate Error message template\n * @return {String|undefined}\n */\nexport const min = (limit, errorTemplate) => {\n  assert(isValidLimitArg(limit), 'Limit arg must be a positive whole number');\n\n  return validateLength(\n    k => limit <= k,\n    v => formatTemplate(errorTemplate || minErrorTemplates[typeof v], [limit]),\n  );\n};\n\nconst maxErrorTemplates = {\n  number: 'Must be at most {0}',\n  string: 'Must contain at most {0} characters',\n  object: 'Must contain at most {0} items',\n};\n\n/**\n * Checks if the value is not higher than the allowed maximum value\n *\n * @param {Number} limit         Maximum value\n * @param {String} errorTemplate Error message template\n * @return {String|undefined}\n */\nexport const max = (limit, errorTemplate) => {\n  assert(isValidLimitArg(limit), 'Limit arg must be a positive whole number');\n\n  return validateLength(\n    k => limit >= k,\n    v => formatTemplate(errorTemplate || maxErrorTemplates[typeof v], [limit]),\n  );\n};\n\nconst betweenErrorTemplates = {\n  number: 'Must be between {0} and {1}',\n  string: 'Must contain between {0} and {1} characters',\n  object: 'Must contain between {0} and {1} items',\n};\n\n/**\n * Checks if the value is inside the specified range\n *\n * @param {Number} min         Minimum range value\n * @param {Number} max         Maximum range value\n * @param {String} errorTemplate Error message template\n * @return {String|undefined}\n */\n// eslint-disable-next-line no-shadow\nexport const between = (min, max, errorTemplate) => {\n  assert(isValidLimitArg(min), 'Min arg must be a positive whole number');\n  assert(isValidLimitArg(max), 'Max arg must be a positive whole number');\n  assert(min < max, 'Min arg can not be larger than max arg');\n\n  return validateLength(\n    k => min <= k && max >= k,\n    v => formatTemplate(errorTemplate || betweenErrorTemplates[typeof v], [min, max]),\n  );\n};\n","import _ from 'lodash';\n\nfunction mutateDeep(state, path, mutator) {\n  const [top, ...rest] = path.split('.');\n\n  if (rest.length === 0) {\n    const nextState = {\n      ...state,\n      [top]: mutator(state[top]),\n    };\n\n    // Remove the next value if undefined\n    if (undefined === nextState[top]) {\n      delete nextState[top];\n    }\n\n    return nextState;\n  }\n\n  return {\n    ...state,\n    [top]: mutateDeep(state[top], rest.join('.'), mutator),\n  };\n}\n\n\n/**\n * Set a deep value in the redux state.\n *\n * @param state\n * @param path\n * @param value\n */\nexport const setInState = (state, path, value) => mutateDeep(state, path, () => value);\n\n/**\n * Omit a deep value in the redux state.\n *\n * @param state\n * @param path\n */\nexport const omitInState = (state, path) => mutateDeep(state, path, () => undefined);\n\n/**\n * Merge an object at a deep path in the redux state.\n *\n * @param state\n * @param path\n * @param value\n */\nexport const mergeInState = (state, path, value) => mutateDeep(\n  state, path, currValue => _.merge(_.cloneDeep(currValue), value),\n);\n\n/**\n * Assigns values from an object at a deep path in the redux state.\n *\n * @param state\n * @param path\n * @param value\n */\nexport const assignInState = (state, path, value) => mutateDeep(\n  state, path, currValue => _.assign(_.cloneDeep(currValue), value),\n);\n","import axios from 'axios';\nimport RequestManager from 'axios-request-manager';\nimport { assert } from '../utils';\n\nconst manager = new RequestManager();\n\nconst invokeAction = (actions = {}, name, ...args) => {\n  const action = actions[name];\n  assert(typeof actions[name] === 'function', `Your Actions object must have a '${name}' Action handler function`);\n  return action(...args);\n};\n\nconst constructHeaders = headers => ({\n  ...manager.getCSRFHeader(), ...headers,\n});\n\nconst handleSuccess = (dispatch, actions, name, ...args) => ({ data }) => dispatch(\n  invokeAction(actions, name, data, ...args),\n);\n\nconst handleError = (dispatch, actions, name, ...args) => (error) => {\n  if (axios.isCancel(error)) {\n    return null;\n  }\n  return dispatch(invokeAction(actions, name, error, ...args));\n};\n\n/**\n * Executes a GET request to an list REST API endpoint. The `receiveList` should\n * accept an object that contains a list of results.\n *\n * @param {String} url     URL of the endpoint\n * @param {Object} query   URL query parameters\n * @param {Object} actions Redux Actions object\n * @param {Object} headers Custom HTTP Headers\n * @return {Function}\n */\nexport const requestList = (url, query = {}, actions = {}, headers = {}) => (dispatch) => {\n  dispatch(invokeAction(actions, 'requestList', query));\n\n  const cancelToken = manager.cancelAxiosAndGetNextToken(url);\n\n  return axios.get(url, {\n    params: query,\n    cancelToken,\n    headers: constructHeaders(headers),\n  }).then(\n    handleSuccess(dispatch, actions, 'receiveList', query),\n    handleError(dispatch, actions, 'receiveList', query),\n  );\n};\n\n/**\n * Executes a GET request to a details REST API endpoint. The `receiveDetails` should\n * accept a single resource object.\n *\n * @param {String} alias   Identifier alias of the resource\n * @param {String} url     URL of the endpoint\n * @param {Object} actions Redux Actions object\n * @param {Object} headers Custom HTTP Headers\n * @return {Function}\n */\nexport const requestDetails = (alias, url, actions, headers = {}) => (dispatch) => {\n  dispatch(invokeAction(actions, 'requestDetails', alias));\n\n  const cancelToken = manager.cancelAxiosAndGetNextToken(url);\n\n  return axios.get(url, {\n    cancelToken,\n    headers: constructHeaders(headers),\n  }).then(\n    handleSuccess(dispatch, actions, 'receiveDetails', alias),\n    handleError(dispatch, actions, 'receiveDetails', alias),\n  );\n};\n\n\n/**\n * Executes a POST or PUT request to a details REST API endpoint with resource attributes.\n * The `receiveDetails` should accept a single resource object.\n *\n * @param {String} alias     Identifier alias of the resource\n * @param {Object} data      Resource attributes that should be stored\n * @param {String} url       URL of the endpoint\n * @param {Object} actions   Redux Actions object\n * @param {Boolean} creating Should the resource be created or edited\n * @param {Object} headers   Custom HTTP Headers\n * @return {Function}\n */\nexport const requestStore = (alias, data, url, actions, creating = false, headers = {}) => (dispatch) => {\n  if (alias) {\n    dispatch(invokeAction(actions, 'requestStore', alias));\n  }\n\n  const executor = creating ? axios.post : axios.put;\n  const cancelToken = manager.cancelAxiosAndGetNextToken(url);\n\n  return executor(url, data, {\n    cancelToken,\n    headers: constructHeaders(headers),\n  }).then(\n    handleSuccess(dispatch, actions, 'receiveStore', alias),\n    (error) => {\n      if (axios.isCancel(error)) {\n        return null;\n      }\n\n      if (alias) {\n        dispatch(invokeAction(actions, 'receiveStore', error, alias));\n      }\n\n      throw error;\n    },\n  );\n};\n\n/**\n * Executes a PATCH request to a details REST API endpoint with resource attributes.\n * The `receiveDetails` should accept a single resource object.\n *\n * @param {String} alias   Identifier alias of the resource\n * @param {Object} data    Resource attributes that should be stored\n * @param {String} url     URL of the endpoint\n * @param {Object} actions Redux Actions object\n * @param {Object} headers Custom HTTP Headers\n * @return {Function}\n */\nexport const requestPatch = (alias, url, data, actions, headers = {}) => (dispatch) => {\n  dispatch(invokeAction(actions, 'requestDetails', alias));\n\n  const cancelToken = manager.cancelAxiosAndGetNextToken(url);\n\n  return axios.patch(url, data, {\n    cancelToken,\n    headers: constructHeaders(headers),\n  }).then(\n    handleSuccess(dispatch, actions, 'receiveDetails', alias),\n    handleError(dispatch, actions, 'receiveDetails', alias),\n  );\n};\n\n/**\n * Executes a DELETE request to a details REST API endpoint.\n * The `receiveDelete` should accept a single resource object. Resource object could be\n * empty if the server returns a 204 status code.\n *\n * @param {String} alias   Identifier alias of the resource\n * @param {String} url     URL of the endpoint\n * @param {Object} actions Redux Actions object\n * @param {Object} headers Custom HTTP Headers\n * @return {Function}\n */\nexport const requestDelete = (alias, url, actions, headers = {}) => (dispatch) => {\n  dispatch(invokeAction(actions, 'requestDelete', alias));\n\n  const cancelToken = manager.cancelAxiosAndGetNextToken(url);\n\n  return axios.delete(url, {\n    cancelToken,\n    headers: constructHeaders(headers),\n  }).then(\n    handleSuccess(dispatch, actions, 'receiveDelete', alias),\n    (error) => {\n      if (axios.isCancel(error)) {\n        return null;\n      }\n\n      if (alias) {\n        dispatch(invokeAction(actions, 'receiveDelete', error, alias));\n      }\n\n      throw error;\n    },\n  );\n};\n","import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport elementType from 'prop-types-extra/lib/elementType';\nimport { bsClass, getClassSet, splitBsProps } from './utils/bootstrapUtils';\nvar propTypes = {\n  componentClass: elementType\n};\nvar defaultProps = {\n  componentClass: 'div'\n};\n\nvar Jumbotron =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Jumbotron, _React$Component);\n\n  function Jumbotron() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Jumbotron.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.componentClass,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"componentClass\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(Component, _extends({}, elementProps, {\n      className: classNames(className, classes)\n    }));\n  };\n\n  return Jumbotron;\n}(React.Component);\n\nJumbotron.propTypes = propTypes;\nJumbotron.defaultProps = defaultProps;\nexport default bsClass('jumbotron', Jumbotron);","import React from 'react';\nimport moment from 'moment';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport {\n  Col,\n  Nav,\n  Row,\n  Button,\n  NavItem,\n  Jumbotron,\n  ButtonGroup,\n} from 'react-bootstrap';\nimport {\n  Page,\n  Left,\n  Right,\n  Loader,\n  Content,\n  TopPanel,\n  ErrorPage,\n  PageNotFound,\n  Abbreviation,\n  CenteredLoader,\n  LoadingWrapper,\n  HorizontalSplit,\n  NotificationList,\n} from 'bandit-pouch';\n\nimport Layout from '../components/layout';\nimport { Tabs } from '../components/markdown';\n\nconst AbbreviationExample = () => {\n  const date = moment().subtract(3, 'm');\n\n  return (\n    <div>\n      <p>\n        This example was shown\n        &nbsp;\n        <Abbreviation\n          label={date.fromNow()}\n          tooltip={date.format('YYYY-MM-DD H:mm:ss')}\n        />\n      </p>\n    </div>\n  );\n};\n\nconst LoadersExample = () => (\n  <div>\n    <p>Simple loader wrapper inside a `div` container</p>\n    <div style={{ padding: '20px' }}>\n      <Loader type=\"ball-spin-fade-loader\" />\n    </div>\n    <br />\n    <p>Vertically and Horizontally centered loader</p>\n    <CenteredLoader type=\"line-scale-pulse-out\" />\n  </div>\n);\n\nconst LayoutExample = () => (\n  <Page title=\"My awesome app\">\n    <TopPanel>\n      <h1>My awesome app</h1>\n    </TopPanel>\n    <HorizontalSplit>\n      <Left>\n        <Nav bsStyle=\"pills\" stacked>\n          <NavItem href=\"#\">Home</NavItem>\n          <NavItem href=\"#\">Orders</NavItem>\n        </Nav>\n      </Left>\n      <Right>\n        <Content>\n          <Jumbotron>\n            <h3>Hello, contents!</h3>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling\n              extra attention to featured content or information.\n            </p>\n            <p>\n              <Button bsStyle=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n        </Content>\n      </Right>\n    </HorizontalSplit>\n  </Page>\n);\n\nconst LoadedPage = ({ model }) => (\n  <div>\n    <h1>List page</h1>\n    <ul>\n      {model.map(({ id, title }) => (\n        <li key={id}>\n          <p>{title}</p>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nLoadedPage.propTypes = {\n  model: PropTypes.array.isRequired,\n};\n\nLoadedPage.mocks = [{ id: 1, title: 'Foo' }, { id: 2, title: 'Bar' }, { id: 3, title: 'Baz' }];\n\nclass LoadingWrapperExample extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      found: true,\n      loading: false,\n      model: [...LoadedPage.mocks],\n    };\n  }\n\n  fetch(options = {}) {\n    this.setState({\n      error: null,\n      found: true,\n      loading: true,\n      model: [],\n    }, () => setTimeout(() => {\n      this.setState(state => ({ ...state, ...options, loading: false }));\n    }, 2000));\n  }\n\n  render() {\n    const {\n      loading, error, found, model,\n    } = this.state;\n\n    return (\n      <div style={{ minHeight: '460px' }}>\n        <ButtonGroup>\n          <Button onClick={() => this.fetch({ model: [...LoadedPage.mocks] })}>\n            Fetch data\n          </Button>\n          <Button onClick={() => this.fetch({ error: { message: 'Remote server error', status: 500, icon: 'warning' } })}>\n            Fetch data with an error\n          </Button>\n          <Button onClick={() => this.fetch({ found: false })}>\n            Fetch data with a not find status\n          </Button>\n        </ButtonGroup>\n\n        <LoadingWrapper\n          component={LoadedPage}\n          loading={loading}\n          found={found}\n          error={error}\n          model={model}\n        />\n      </div>\n    );\n  }\n}\n\nconst PagesExample = () => (\n  <Row>\n    <Col xs={12}>\n      <ErrorPage\n        status=\"503\"\n        icon=\"exclamation-circle\"\n        className=\"text-danger\"\n        message=\"An error message\"\n      />\n    </Col>\n    <Col xs={12}>\n      <PageNotFound />\n    </Col>\n  </Row>\n);\n\nclass NotificationsExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.state = { alerts: [] };\n  }\n\n  onAddAlert(type, message) {\n    this.setState(state => ({\n      alerts: [...state.alerts, {\n        id: Date.now(),\n        bsStyle: type,\n        message,\n      }],\n    }));\n  }\n\n  onClearAlert(id) {\n    this.setState(state => ({\n      alerts: state.alerts.filter(alert => alert.id !== id),\n    }));\n  }\n\n  render() {\n    const { alerts = [] } = this.state;\n\n    return (\n      <div>\n        <p>Click the buttons bellow to create alerts</p>\n        <ButtonGroup>\n          <Button bsStyle=\"info\" onClick={() => this.onAddAlert('info', 'Info message')}>\n            Show info alert\n          </Button>\n          <Button bsStyle=\"warning\" onClick={() => this.onAddAlert('warning', 'Warning message')}>\n            Show warning alert\n          </Button>\n          <Button bsStyle=\"danger\" onClick={() => this.onAddAlert('danger', 'Danger message')}>\n            Show danger alert\n          </Button>\n        </ButtonGroup>\n\n        <NotificationList\n          timeout={4}\n          alerts={alerts}\n          clearAlert={id => this.onClearAlert(id)}\n        />\n      </div>\n    );\n  }\n}\n\nconst LayoutPage = ({ data }) => (\n  <Layout>\n    <Tabs\n      id=\"ui-tabs\"\n      data={data}\n      examples={{\n        'ui-pages': [<PagesExample />],\n        'ui-layout': [<LayoutExample />],\n        'ui-loaders': [<LoadersExample />],\n        'ui-abbreviation': [<AbbreviationExample />],\n        'ui-notifications': [<NotificationsExample />],\n        'ui-loading-wrapper': [<LoadingWrapperExample />],\n      }}\n      defaultActiveKey=\"ui-layout\"\n    />\n  </Layout>\n);\n\nLayoutPage.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport const pageQuery = graphql`  \n  query {\n    allMarkdownRemark(filter: {\n      frontmatter: {\n        id: { glob: \"ui-*\" }\n      }\n    }){\n      edges {\n        node {\n          html\n          frontmatter {\n            id\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default LayoutPage;\n"],"sourceRoot":""}