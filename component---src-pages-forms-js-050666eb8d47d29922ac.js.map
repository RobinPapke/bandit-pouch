{"version":3,"sources":["webpack:///./src/components/markdown.js","webpack:///../src/ui/Select.js","webpack:///../src/utils.js","webpack:///../src/ui/ErrorPage.js","webpack:///../src/ui/Abbreviation.js","webpack:///../src/ui/DropdownButton.js","webpack:///../src/ui/DynamicRow.js","webpack:///../src/ui/MagicRow.js","webpack:///../src/ui/PageNotFound.js","webpack:///../src/ui/Loaders.js","webpack:///../src/ui/LoadingWrapper.js","webpack:///../src/ui/Layout.js","webpack:///../src/ui/NotificationList.js","webpack:///../src/forms/FieldError.js","webpack:///../src/forms/FormField.js","webpack:///../src/forms/CheckboxField.js","webpack:///../src/forms/FieldArray/KeyValueFieldArray.js","webpack:///../src/forms/FieldArray/VerticalFieldArray/FieldArrayElement.js","webpack:///../src/forms/FieldArray/VerticalFieldArray/SortableList.js","webpack:///../src/forms/FieldArray/VerticalFieldArray/VerticalFieldArray.js","webpack:///../src/forms/FieldArray/VerticalFieldArray/index.js","webpack:///../src/forms/InputField.js","webpack:///../src/forms/PasswordField.js","webpack:///../src/forms/RangeField.js","webpack:///../src/forms/SelectField.js","webpack:///../src/forms/SpinnerField.js","webpack:///../src/forms/SubmitResetRow.js","webpack:///../src/forms/TextAreaField.js","webpack:///../src/forms/TextField.js","webpack:///../src/forms/validators.js","webpack:///../src/redux/reducers.js","webpack:///../src/redux/requests.js","webpack:///./src/components/code.js","webpack:///./src/components/form-example.js","webpack:///./src/store/index.js","webpack:///./src/pages/forms.js"],"names":["MarkdownTabs","_ref","id","pages","examples","defaultActiveKey","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","Container","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","sm","md","lg","react_bootstrap__WEBPACK_IMPORTED_MODULE_12__","bsStyle","stacked","map","page","react_bootstrap__WEBPACK_IMPORTED_MODULE_13__","key","eventKey","title","Content","animation","Pane","Markdown","html","getArticles","_ref2$allMarkdownRema","arguments","length","undefined","allMarkdownRemark","_ref3$edges","edges","_ref4","node","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_5___default","frontmatter","Tabs","_ref5","data","propTypes","PropTypes","string","isRequired","array","object","defaultProps","_Component","props","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","element","React","createRef","_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default","_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default","value","current","querySelectorAll","forEach","hljs","highlightBlock","_this$props","ref","className","xs","dangerouslySetInnerHTML","__html","example","Component","Select","options","valueKey","labelKey","multi","async","creatable","objectWithoutPropertiesLoose_default","ResolvedSelectComponent","SelectComponent","AsyncCreatable","Async","Creatable","resolveSelectComponent","react_default","Object","assign","arrayOf","any","loadOptions","func","bool","CHILDREN_PROP_TYPE","oneOfType","debug","_","noop","tooltip","text","Tooltip","get","popover","content","Popover","assert","deprecate","ErrorPage","icon","children","classnames","lib_default","name","size","Abbreviation","label","type","style","borderBottom","oneOf","DropdownButton","onSelect","shouldUseNormalButton","Children","count","Button","onClick","es_DropdownButton","DynamicRow","items","render","_ref$defaultWidth","defaultWidth","rowWidth","itemIndex","rows","reduce","rowsPerItem","item","colIndex","itemWidth","Math","min","width","push","isUndefined","visible","Col","chain","filter","row","isEmpty","rowIndex","Row","shape","number","MagicRow","colSizeKey","colCount","flatMap","identity","child","newCols","PageNotFound","ui_ErrorPage","Loader","active","react_loaders_default","CenteredLoader","height","display","justifyContent","alignItems","Loaders_Loader","LoadingWrapper","Child","component","loader","loading","error","found","CHILDREN_PROP_TYPES","Page","apply","inheritsLoose_default","_proto","prototype","componentDidMount","document","componentWillReceiveProps","nextProps","TopPanel","HorizontalSplit","_ref2","_ref3","Left","_ref4$contentWidthXs","contentWidthXs","_ref4$contentWidthSm","contentWidthSm","Right","_ref5$contentWidthXs","_ref5$contentWidthSm","Float","_ref6","position","bottom","right","NotificationItem","componentWillMount","timeout","setTimeout","dismiss","componentWillUnmount","clearTimeout","onClose","_clearTimeout","toString","_this2","header","errors","message","Alert","onDismiss","NotificationList","alerts","clearAlert","NotificationList_NotificationItem","FieldError","_ref$style","_ref$children","FormField","help","_ref$meta","meta","touched","validationState","getValidationState","isString","split","FormGroup","controlId","ControlLabel","HelpBlock","forms_FieldError","e","i","CheckboxField","input","disabled","forms_FormField","Checkbox","checked","onChange","evt","target","KeyValueFieldArray","fields","keyField","valueField","emptyMessage","bsSize","marginLeft","Glyphicon","glyph","ui_MagicRow","field","idx","marginBottom","es","InputGroup","Addon","borderLeft","borderRight","padding","OverlayTrigger","placement","overlay","Utils","remove","FormControl","Feedback","FieldArrayElement","initiallyMinimized","state","minimized","shouldComponentUpdate","nextState","some","setMinimized","setState","prevState","dragHandleProps","minimizable","duplicable","onRemove","onDuplicate","transition","overflow","Panel","Body","fontSize","marginRight","aria-label","aria-hidden","marginTop","SortableList","_this$props$direction","direction","onDragEnd","dragHandle","react_beautiful_dnd_esm","droppableId","provided","snapshot","innerRef","droppableProps","classNames","dropping","isDraggingOver","index","draggableId","providedDraggable","draggableSnapshot","draggableProps","dragging","cloneElement","placeholder","VerticalFieldArray","firstRender","isEqual","getAll","renderField","InnerComponent","innerComponent","innerProps","labelDefault","_this$props$renderKey","renderKey","_this$props$renderLab","renderLabel","VerticalFieldArray_FieldArrayElement","currentValue","_this$props2","initialFieldValue","sortable","addTooltip","addChoices","onAdd","fieldArray","SortableList_SortableList","source","destination","move","textAlign","margin","ui_DropdownButton","selected","InputField","onChangeValue","componentClass","PasswordField","forms_InputField","RangeField","formatLabel","max","step","js_default","toNumber","onChangeComplete","onBlur","SelectField","defaultValue","isLoading","clearable","_ref$onChangeWithValu","onChangeWithValue","denormalize","denormalized","ui_Select","selection","onFocus","SpinnerField","SubmitResetRow","enabled","pristine","submitting","submitFailed","valid","reset","ButtonToolbar","TextAreaField","cols","TextField","TEMPLATE_REGEX","ALPHANUMERIC_REGEX","URL_REGEX","RegExp","formatTemplate","template","args","replace","match","required","errorTemplate","isNull","trim","isArray","isObject","regex","pattern","isRegExp","url","alpha","containing","values","includes","join","excluding","isValidLimitArg","limit","isInteger","validateLength","validate","formatError","isNaN","Error","getLength","minErrorTemplates","k","v","maxErrorTemplates","betweenErrorTemplates","between","RequestManager","Code","highlight","language","react__WEBPACK_IMPORTED_MODULE_5___default","concat","FormFields","redux_form_es","autofocus","Validators","reduxForm","form","anyTouched","handleSubmit","onSubmit","form_example_FormFields","src","reducer","combineReducers","formReducer","middleware","window","devToolsExtension","createStore","compose","Values","connect","objectSpread_default","_ref$example","_example$registeredFi","registeredFields","_example$values","_example$fields","keys","obj","defineProperty_default","forms_JSONCode","json","JSONCode","code","JSON","stringify","FormPage","_getPrototypeOf2","classCallCheck_default","_len","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","_getArticles","article","slicedToArray_default","store","layout","form_example","Fragment","markdown","pageQuery"],"mappings":"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","file":"component---src-pages-forms-js-050666eb8d47d29922ac.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport hljs from 'highlight.js';\n\nimport {\n  Col,\n  Row,\n  Nav,\n  Tab,\n  NavItem,\n} from 'react-bootstrap';\n\nconst MarkdownTabs = ({\n  id, pages, examples, defaultActiveKey,\n}) => (\n  <Tab.Container id={id} defaultActiveKey={defaultActiveKey}>\n    <Row>\n      <Col sm={4} md={3} lg={2}>\n        <Nav bsStyle=\"pills\" stacked>\n          {pages.map(page => (\n            <NavItem key={page.id} eventKey={page.id}>{page.title}</NavItem>\n          ))}\n        </Nav>\n      </Col>\n      <Col sm={8} md={9} lg={10}>\n        <Tab.Content animation>\n          {pages.map(page => (\n            <Tab.Pane key={page.id} eventKey={page.id} title={page.title}>\n              <Markdown\n                html={page.html}\n                title={page.title}\n                examples={examples[page.id]}\n              />\n            </Tab.Pane>\n          ))}\n        </Tab.Content>\n      </Col>\n    </Row>\n  </Tab.Container>\n);\n\nMarkdownTabs.propTypes = {\n  id: PropTypes.string.isRequired,\n  pages: PropTypes.array.isRequired,\n  examples: PropTypes.object,\n  defaultActiveKey: PropTypes.string.isRequired,\n};\n\nMarkdownTabs.defaultProps = {\n  examples: {},\n};\n\n// extract articles from the GraphQL response\nexport function getArticles(data = {}) {\n  const { allMarkdownRemark = {} } = data || {};\n  const { edges = [] } = allMarkdownRemark || {};\n  return edges.map(({ node }) => ({\n    html: node.html,\n    ...node.frontmatter,\n  }));\n}\n\nexport function Tabs({\n  id, defaultActiveKey, data, examples,\n}) {\n  const pages = getArticles(data);\n\n  return (\n    <MarkdownTabs\n      id={id}\n      pages={pages}\n      examples={examples}\n      defaultActiveKey={defaultActiveKey}\n    />\n  );\n}\n\nTabs.propTypes = {\n  id: PropTypes.string.isRequired,\n  data: PropTypes.object.isRequired,\n  examples: PropTypes.object,\n  defaultActiveKey: PropTypes.string.isRequired,\n};\n\nTabs.defaultProps = {\n  examples: {},\n};\n\nexport class Markdown extends Component {\n  constructor(props) {\n    super(props);\n    this.element = React.createRef();\n  }\n\n  componentDidMount() {\n    const { current } = this.element;\n    current.querySelectorAll('code').forEach(element => hljs.highlightBlock(element));\n  }\n\n  render() {\n    const { title, html, examples } = this.props;\n\n    return (\n      <div ref={this.element} className=\"row markdown-container\">\n        <Col xs={12}>\n          <h1>{title}</h1>\n        </Col>\n        <hr />\n        <Col xs={12}>\n          <div\n            className=\"markdown-content\"\n            dangerouslySetInnerHTML={{ __html: html }} // eslint-disable-line react/no-danger\n          />\n          {examples.map(example => (\n            <span key={example}>{example}</span>\n          ))}\n        </Col>\n      </div>\n    );\n  }\n}\n\nMarkdown.propTypes = {\n  title: PropTypes.string.isRequired,\n  html: PropTypes.string.isRequired,\n  examples: PropTypes.array,\n};\n\nMarkdown.defaultProps = {\n  examples: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SelectComponent from 'react-select';\n\nfunction resolveSelectComponent(async, creatable) {\n  if (async) {\n    return creatable ? SelectComponent.AsyncCreatable : SelectComponent.Async;\n  }\n  return creatable ? SelectComponent.Creatable : SelectComponent;\n}\n\n/**\n * Component that behaves as a wrapper around `react-select` component in order\n * to create a unified API between different version of the original component.\n *\n * Please checkout `react-select` documentation for usage.\n */\nconst Select = ({\n  value,\n  options,\n  valueKey,\n  labelKey,\n  multi,\n  async,\n  creatable,\n  ...props\n}) => {\n  const ResolvedSelectComponent = resolveSelectComponent(async, creatable);\n\n  return (\n    <ResolvedSelectComponent\n      {...props}\n      multi={multi}\n      value={value}\n      options={options}\n      valueKey={valueKey}\n      labelKey={labelKey}\n    />\n  );\n};\n\nSelect.propTypes = {\n  /**\n   * Currently selected value\n   */\n  value: PropTypes.string,\n  /**\n   * Key used to extract the value from the options object. Defaults to `value`\n   */\n  valueKey: PropTypes.string,\n  /**\n   * Key used to extract the label from the options object. Defaults to `label`\n   */\n  labelKey: PropTypes.string,\n  /**\n   * Available select options\n   */\n  options: PropTypes.arrayOf(PropTypes.any),\n  /**\n   * Callback used to load options asynchronously. It can also be a Promise\n   */\n  loadOptions: PropTypes.func,\n  /**\n   * Should the value from the select's input field be created when it's missing in the options\n   */\n  creatable: PropTypes.bool,\n  /**\n   * Should this component accept multiple values\n   */\n  multi: PropTypes.bool,\n  /**\n   * Loads the data from a promise or a callback\n   */\n  async: PropTypes.bool,\n};\n\nSelect.defaultProps = {\n  value: null,\n  valueKey: 'value',\n  labelKey: 'value',\n  options: [],\n  loadOptions: null,\n  creatable: false,\n  async: false,\n  multi: false,\n};\n\nexport default Select;\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Popover, Tooltip } from 'react-bootstrap';\n\nexport const CHILDREN_PROP_TYPE = PropTypes.oneOfType([\n  PropTypes.arrayOf(PropTypes.node),\n  PropTypes.node,\n  PropTypes.arrayOf(PropTypes.element),\n  PropTypes.element,\n]);\n\n\n// eslint-disable-next-line no-confusing-arrow\nconst debug = func => process.env.NODE_ENV !== 'production' ? func : _.noop;\n\n/**\n * Utility function that creates a Tooltip element with the supplied text.\n *\n * @param {String} text Tooltip text\n * @return {*}\n */\nexport const tooltip = (text) => {\n  if (Tooltip === _.get(text, 'type')) {\n    return text;\n  }\n\n  return (<Tooltip id=\"tooltip\">{text}</Tooltip>);\n};\n\n/**\n * Utility function that creates a Popover element with the supplied title and text.\n *\n * @param {String} title   Popover title\n * @param {String} content Popover contents\n * @return {*}\n */\nexport const popover = (title, content) => (\n  <Popover id=\"popover\" title={title}>{content}</Popover>\n);\n\n/**\n * Verify that a certain expectation is met, or throw a exception otherwise.\n *\n * This is useful for communicating assumptions in the code to other human\n * readers as well as catching bugs that accidentally violates these\n * expectations.\n *\n * Assertions are removed from production builds, so they can be freely added\n * for documentation and debugging purposes without worries of incurring any\n * performance penalty. However, because of that, they should not be used for\n * checks that could reasonably fail during normal usage. Furthermore, care\n * should be taken to avoid accidentally relying on side-effects produced from\n * evaluating the condition itself, since the code will not run in production.\n *\n * @method assert\n * @param condition\n * @param message\n */\nexport const assert = debug((condition, message = '') => {\n  if (!condition) {\n    throw new Error(`Assertion Failed: ${message}`);\n  }\n});\n\n/**\n * Display a deprecation warning with the provided message and a stack trace\n * (Chrome and Firefox only) when the assigned method is called.\n *\n * Calls to this function are removed from production builds, so they can be\n * freely added for documentation and debugging purposes without worries of\n * incurring any performance penalty.\n *\n * @method deprecate\n * @param {String} message A description of the deprecation.\n * @param {Function} func  Function that should be deprecated.\n */\nexport const deprecate = debug((message, func) => function (...args) { // eslint-disable-line func-names\n  const { stack } = new Error();\n  // eslint-disable-next-line no-console\n  console.warn(`DEPRECATION: ${message}\\n\\t${stack.split('\\n').slice(2).join('\\n\\t')}`);\n  return func.apply(this, args);\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport FontAwesome from 'react-fontawesome';\nimport { CHILDREN_PROP_TYPE } from '../utils';\n\n/**\n * Renders an error page with an error message and a Font Awesome icon\n */\nconst ErrorPage = ({ icon, className, children }) => (\n  <div className={classnames('error-page', className)}>\n    {icon && <FontAwesome name={icon} size=\"4x\" />}\n    <h1 className=\"page-error\">{children}</h1>\n  </div>\n);\n\nErrorPage.defaultProps = {\n  /**\n   * Font awesome icon\n   */\n  icon: null,\n  /**\n   * Additional class names\n   */\n  className: null,\n};\n\nErrorPage.propTypes = {\n  icon: PropTypes.string,\n  className: PropTypes.string,\n  children: CHILDREN_PROP_TYPE.isRequired,\n};\n\nexport default ErrorPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Used to wrap a label in abbreviation tags if a valid tooltip is provided. We differentiate the abbr style\n * depending on the type passed in so that the dotted line is shown properly on the metric labels.\n */\nconst Abbreviation = ({\n  label, type, tooltip, ...props\n}) => {\n  if (tooltip) {\n    return (\n      <abbr\n        {...props}\n        title={tooltip}\n        style={{ borderBottom: `1px dotted ${type === 'metric' ? '#FFF' : '#777'}` }}\n      >\n        {label}\n      </abbr>\n    );\n  }\n\n  return (<span {...props}>{label}</span>);\n};\n\nAbbreviation.propTypes = {\n  /**\n   * Abbreviation label text defining the item\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * String description of the label\n   */\n  tooltip: PropTypes.string,\n  /**\n   * The type of object that the label is being defined for.\n   * Choices: metric, dimension or any(default)\n   */\n  type: PropTypes.oneOf(['metric', 'dimension', 'any']),\n};\n\nAbbreviation.defaultProps = {\n  type: 'any',\n  tooltip: null,\n};\n\nexport default Abbreviation;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n  Button as BootstrapButton,\n  DropdownButton as BootstrapDropdownButton,\n} from 'react-bootstrap';\nimport _ from 'lodash';\n\n\n/**\n * Component that renders a dropdown button. If no MenuItem is provided as children it will behave as a normal button.\n */\nconst DropdownButton = ({\n  title,\n  className,\n  style,\n  onSelect,\n  children,\n  ...props\n}) => {\n  const shouldUseNormalButton = React.Children.count(children) < 2;\n\n  return (\n    <span\n      className={className}\n      style={style}\n    >\n      {shouldUseNormalButton\n        ? (\n          <BootstrapButton\n            {...props}\n            onClick={onSelect}\n          >\n            {title}\n          </BootstrapButton>\n        ) : (\n          <BootstrapDropdownButton\n            {...props}\n            title={title}\n            onSelect={onSelect}\n          >\n            {children}\n          </BootstrapDropdownButton>\n        )}\n    </span>\n  );\n};\n\n\nDropdownButton.propTypes = {\n  /**\n   * The class name that is applied to the outer wrapper\n   */\n  className: PropTypes.string,\n  /**\n   * The style object that is applied to the outer wrapper\n   */\n  style: PropTypes.object,\n  /**\n   * The title that will be displayed when using the dropdown button\n   */\n  title: PropTypes.string,\n  /**\n   * Callback function that returns the selected menu value, when dropdown mode is available\n   */\n  onSelect: PropTypes.func,\n  /**\n   * A list of MenuItem elements to be rendered in the dropdown. If none is provided then the button will behave as\n   * a normal button\n   */\n  children: PropTypes.arrayOf(PropTypes.element),\n};\n\nDropdownButton.defaultProps = {\n  className: '',\n  style: {},\n  title: '',\n  onSelect: _.noop,\n  children: null,\n};\n\nexport default DropdownButton;\n","import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n  Col,\n  Row,\n} from 'react-bootstrap';\n\nconst MAX_COLUMNS = 12;\n\n\n/**\n * Dynamically renders a Bootstrap grid ensuring that a new Row is used once the column width exceeds 12. This helps to\n * avoid wrapping issues and also can handle having components with various widths.\n */\nconst DynamicRow = ({\n  items, render, defaultWidth = MAX_COLUMNS, children, className, style,\n}) => {\n  let rowWidth = MAX_COLUMNS;\n\n\n  let itemIndex = 0;\n\n  const rows = _.reduce(items, (rowsPerItem, item, colIndex) => {\n    const itemWidth = Math.min(item.width || defaultWidth, 12);\n    if (rowWidth + itemWidth > 12) {\n      rowsPerItem.push([]);\n      rowWidth = 0;\n    }\n\n    if (_.isUndefined(item.visible) || item.visible) {\n      rowsPerItem[rowsPerItem.length - 1].push(\n        <Col\n          key={colIndex}\n          xs={12}\n          sm={itemWidth}\n        >\n          {render(item, itemIndex)}\n        </Col>,\n      );\n      rowWidth += itemWidth;\n    }\n\n    itemIndex += 1;\n    return rowsPerItem;\n  }, []);\n\n  if (!_.isUndefined(children)) {\n    /* Place the children in the remaining space of the last row or create a new row for it if there is none. */\n    let width = MAX_COLUMNS - rowWidth;\n    if (width < 1) {\n      width = MAX_COLUMNS;\n      rows.push([]);\n    }\n\n    const lastRow = rows[rows.length - 1];\n    lastRow.push(\n      <Col\n        key=\"extra\"\n        xs={MAX_COLUMNS}\n        sm={width}\n      >\n        {children}\n      </Col>,\n    );\n  }\n\n  return (\n    <div className={className} style={style}>\n      {_\n        .chain(rows)\n        .filter(row => !_.isEmpty(row))\n        .map((row, rowIndex) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <Row key={rowIndex}>\n            {row}\n          </Row>\n        ))\n        .value()}\n    </div>\n  );\n};\n\nDynamicRow.propTypes = {\n  /**\n   * The class name that is applied to the outer wrapper\n   */\n  className: PropTypes.string,\n  /**\n   * The style object that is applied to the outer wrapper\n   */\n  style: PropTypes.object,\n  /*\n   * The contents of the grid. Items should have an attribute of \"width\", otherwise the defaultWidth is used.\n   */\n  items: PropTypes.arrayOf(PropTypes.shape({\n    width: PropTypes.number,\n  })).isRequired,\n  /*\n   * The contents of the grid. Items should have an attribute of \"width\", otherwise the defaultWidth is used.\n   */\n  render: PropTypes.func.isRequired,\n  /*\n   *  The render function for the contents of the column. This behaves like the map function over `items`.\n   *  The render function has the signature `render(item, index)`.\n   */\n  defaultWidth: PropTypes.number.isRequired,\n  /**\n   * A list of children column elements to be rendered\n   */\n  children: PropTypes.arrayOf(PropTypes.element),\n};\n\nDynamicRow.defaultProps = {\n  className: '',\n  style: {},\n  children: null,\n};\n\nexport default DynamicRow;\n","import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n  Row,\n} from 'react-bootstrap';\n\n\n/**\n * This is a simpler version of the dynamic row component.\n */\nconst MagicRow = ({\n  className, style, colSizeKey, children,\n}) => {\n  const rows = [[]];\n  let colCount = 0;\n  _.flatMap(children)\n    .filter(_.identity)\n    .forEach((child) => {\n      const newCols = child.props[colSizeKey];\n      if (colCount + newCols > 12) {\n        rows.push([]);\n        colCount = 0;\n      }\n\n      rows[rows.length - 1].push(child);\n      colCount += newCols;\n    });\n\n  return (\n    <div\n      className={className}\n      style={style}\n    >\n      {_.map(rows, (row, rowIndex) => (\n        <Row key={rowIndex}>\n          {row}\n        </Row>\n      ))}\n    </div>\n  );\n};\n\n\nMagicRow.propTypes = {\n  /**\n   * The class name that is applied to the outer wrapper\n   */\n  className: PropTypes.string,\n  /**\n   * The style object that is applied to the outer wrapper\n   */\n  style: PropTypes.object,\n  colSizeKey: PropTypes.string,\n  /**\n   * A list of MenuItem elements to be rendered in the dropdown. If none is provided then the button will behave as\n   * a normal button\n   */\n  children: PropTypes.arrayOf(PropTypes.element),\n};\n\nMagicRow.defaultProps = {\n  className: '',\n  style: {},\n  colSizeKey: 'xs',\n  children: null,\n};\n\nexport default MagicRow;\n","import React from 'react';\nimport ErrorPage from './ErrorPage';\n\n/**\n * Renders a `Not found` error message\n */\nexport default () => (\n  <ErrorPage>Not found</ErrorPage>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactLoader from 'react-loaders';\n\n/**\n * Renders the React Loader from `react-loaders` library wrapped inside a loader container element.\n */\nexport const Loader = ({ type, active }) => {\n  if (!active) {\n    return null;\n  }\n\n  return (\n    <div className=\"loader-container\">\n      <ReactLoader active={active} type={type} />\n    </div>\n  );\n};\n\nLoader.propTypes = {\n  /**\n   * Specifies the React Loader type\n   */\n  type: PropTypes.string,\n  /**\n   * When this property is set to `false` the loader is not shown.\n   */\n  active: PropTypes.bool,\n};\n\nLoader.defaultProps = {\n  type: 'ball-scale-ripple-multiple',\n  active: true,\n};\n\n/**\n * Renders the Loader component that is vertically and horizontally centered using flex box.\n */\nexport const CenteredLoader = props => (\n  <div\n    style={{\n      height: 400,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }}\n  >\n    <Loader {...props} />\n  </div>\n);\n\nCenteredLoader.propTypes = {\n  /**\n   * Specifies the React Loader type\n   */\n  type: PropTypes.string,\n  /**\n   * When this property is set to `false` the loader is not shown.\n   */\n  active: PropTypes.bool,\n};\n\nCenteredLoader.defaultProps = {\n  type: 'ball-scale-ripple-multiple',\n  active: true,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ErrorPage from './ErrorPage';\nimport PageNotFound from './PageNotFound';\nimport { CenteredLoader } from './Loaders';\n\n/**\n * Component that can be used to show specific components depending on the current state.\n *\n * If the state is currently loading, the Loading component, if specified, should be shown.\n * In case of an error or that data could not be found, an Error page is displayed.\n * When the state is not loading and there are no errors, the specified component is rendered.\n */\nconst LoadingWrapper = ({\n  component: Child,\n  loader: Loader,\n  loading,\n  error,\n  found,\n  ...props\n}) => {\n  if (loading) {\n    return <Loader />;\n  }\n\n  if (!found) {\n    return <PageNotFound />;\n  }\n\n  if (error) {\n    return <ErrorPage className=\"text-danger\" icon=\"exclamation\">{error}</ErrorPage>;\n  }\n\n  return <Child {...props} />;\n};\n\n\nLoadingWrapper.propTypes = {\n  /**\n   * React component that should be rendered inside this wrapper\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]).isRequired,\n  /**\n   * React component that should be shown when `loading` is set to `true`\n   */\n  loader: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  /**\n   * When this prop is `true`, the Loader component is shown\n   */\n  loading: PropTypes.bool,\n  /**\n   * When this prop is `false`, the `PageNotFound` component is shown\n   */\n  found: PropTypes.bool,\n  /**\n   * Error message that should be show. The message is shown using the `ErrorPage` component\n   */\n  error: PropTypes.string,\n};\n\nLoadingWrapper.defaultProps = {\n  loader: CenteredLoader,\n  loading: false,\n  error: null,\n  found: true,\n};\n\nexport default LoadingWrapper;\n","import PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport React, { Component } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { CHILDREN_PROP_TYPE } from '../utils';\n\nconst CHILDREN_PROP_TYPES = {\n  /**\n   * Child components\n   */\n  children: CHILDREN_PROP_TYPE.isRequired,\n};\n\n/**\n * Component that is used to set the document title in the browser\n */\nexport class Page extends Component {\n  componentDidMount() {\n    const { title } = this.props;\n    document.title = title;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      title,\n    } = this.props;\n\n    if (title !== nextProps.title) {\n      document.title = nextProps.title;\n    }\n  }\n\n  render() {\n    const {\n      style,\n      className,\n      children,\n    } = this.props;\n\n    return (\n      <div className={className} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\n\nPage.propTypes = {\n  ...CHILDREN_PROP_TYPES,\n  /**\n   * Page title\n   */\n  title: PropTypes.string,\n  /**\n   * Custom CSS styling\n   */\n  style: PropTypes.object,\n  /**\n   * Additional class names\n   */\n  className: PropTypes.string,\n};\n\nPage.defaultProps = {\n  style: null,\n  title: null,\n  className: null,\n};\n\n/**\n * Renders a top panel used mainly to contain a headline or a page title\n */\nexport const TopPanel = ({ style, className, children }) => (\n  <div className={classnames('page-layout-toppanel', className)} style={style}>\n    {children}\n  </div>\n);\n\nTopPanel.propTypes = {\n  ...CHILDREN_PROP_TYPES,\n  /**\n   * Custom CSS styling\n   */\n  style: PropTypes.object,\n  /**\n   * Additional class names\n   */\n  className: PropTypes.string,\n};\n\nTopPanel.defaultProps = {\n  style: null,\n  className: null,\n};\n\n/**\n * Wrapper around Bootstrap's Row component that makes it behave like flex container.\n * Should be used in conjunction with Left and Right components.\n */\nexport const HorizontalSplit = ({ style, className, children }) => (\n  <Row className={classnames('page-layout-horizontalsplit', className)} style={{ ...style, display: 'flex' }}>\n    {children}\n  </Row>\n);\n\nHorizontalSplit.propTypes = {\n  ...CHILDREN_PROP_TYPES,\n  /**\n   * Custom CSS styling\n   */\n  style: PropTypes.object,\n  /**\n   * Additional class names\n   */\n  className: PropTypes.string,\n};\nHorizontalSplit.defaultProps = { ...TopPanel.defaultProps };\n\n/**\n * Renders a page layout content element\n */\nexport const Content = ({ style, className, children }) => (\n  <div className={classnames('page-layout-content', className)} style={style}>\n    {children}\n  </div>\n);\n\nContent.propTypes = {\n  ...CHILDREN_PROP_TYPES,\n  /**\n   * Custom CSS styling\n   */\n  style: PropTypes.object,\n  /**\n   * Additional class names\n   */\n  className: PropTypes.string,\n};\nContent.defaultProps = { ...TopPanel.defaultProps };\n\n/**\n * Renders a Bootstrap's Col component with defined with, mainly used as a sidebar.\n * Should be used in conjunction with HorizontalSplit and Right components.\n */\nexport const Left = ({\n  contentWidthXs = 8, contentWidthSm = 9, style, className, children,\n}) => (\n  <Col\n    xs={12 - contentWidthXs}\n    md={12 - contentWidthSm}\n    className={classnames('page-layout-horizontalsplit-left', className)}\n    style={style}\n  >\n    {children}\n  </Col>\n);\n\nLeft.propTypes = {\n  ...CHILDREN_PROP_TYPES,\n  /**\n   * Custom CSS styling\n   */\n  style: PropTypes.object,\n  /**\n   * Additional class names\n   */\n  className: PropTypes.string,\n  /**\n   * Width of the Column element for extra small devices\n   */\n  contentWidthXs: PropTypes.number,\n  /**\n   * Width of the Column element for small devices\n   */\n  contentWidthSm: PropTypes.number,\n};\nLeft.defaultProps = { ...TopPanel.defaultProps };\n\n/**\n * Renders a Bootstrap's Col component with defined with that should be pushed to the right side.\n * Should be used in conjunction with HorizontalSplit and Left components.\n */\nexport const Right = ({\n  contentWidthXs = 8, contentWidthSm = 9, style, className, children,\n}) => (\n  <Col\n    xs={contentWidthXs}\n    md={contentWidthSm}\n    className={classnames('page-layout-horizontalsplit-right', className)}\n    style={style}\n  >\n    {children}\n  </Col>\n);\n\nRight.propTypes = {\n  ...CHILDREN_PROP_TYPES,\n  /**\n   * Custom CSS styling\n   */\n  style: PropTypes.object,\n  /**\n   * Additional class names\n   */\n  className: PropTypes.string,\n  /**\n   * Width of the Column element for extra small devices\n   */\n  contentWidthXs: PropTypes.number,\n  /**\n   * Width of the Column element for small devices\n   */\n  contentWidthSm: PropTypes.number,\n};\nRight.defaultProps = { ...Left.defaultProps };\n\n/**\n * Renders an element that is fixed to he bottom right corner.\n */\nexport const Float = ({ children }) => (\n  <div style={{ position: 'fixed', bottom: '5em', right: '5em' }}>\n    {children}\n  </div>\n);\n\nFloat.propTypes = { ...CHILDREN_PROP_TYPES };\n\nexport default {\n  Page,\n  TopPanel,\n  Content,\n  HorizontalSplit,\n  Left,\n  Right,\n  Float,\n};\n","import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst SECONDS = 1000;\n\n/**\n * Individual Notification (using the Bootstrap Alert box)\n */\nexport class NotificationItem extends Component {\n  componentWillMount() {\n    const { timeout } = this.props;\n    if (timeout && setTimeout) {\n      this.timeout = setTimeout(() => this.dismiss(), timeout * SECONDS);\n    }\n  }\n\n  componentWillUnmount() {\n    this.clearTimeout();\n  }\n\n  dismiss() {\n    const { onClose } = this.props;\n    onClose();\n    this.clearTimeout();\n  }\n\n  clearTimeout() {\n    if (clearTimeout) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  render() {\n    const {\n      header,\n      errors,\n      message,\n      bsStyle,\n    } = this.props;\n\n    return (\n      <Alert\n        bsStyle={bsStyle}\n        onDismiss={() => this.dismiss()}\n      >\n        {header && <h4>{header}</h4>}\n        <p>{message}</p>\n        <ul>\n          {_.map(errors, error => (<li key={error}>{error}</li>))}\n        </ul>\n      </Alert>\n    );\n  }\n}\n\nNotificationItem.propTypes = {\n  /**\n   * Alert headline\n   */\n  header: PropTypes.string,\n  /**\n   * Message to display\n   */\n  message: PropTypes.string.isRequired,\n  /**\n   * A list of errors to be rendered in the alert\n   */\n  errors: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * Bootstrap Alert type, e.g. info/success\n   */\n  bsStyle: PropTypes.oneOf(['success', 'info', 'warning', 'danger']),\n  /**\n   * Sets the time in seconds how long should an alert be visible\n   */\n  timeout: PropTypes.number,\n  /**\n   * Callback function executed when alert is dismissed\n   */\n  onClose: PropTypes.func.isRequired,\n};\n\nNotificationItem.defaultProps = {\n  header: null,\n  errors: [],\n  timeout: 30,\n  bsStyle: 'info',\n};\n\n/**\n * Container component creating a NotificationItem for each notification in the Redux store\n */\nexport const NotificationList = ({ alerts, timeout, clearAlert }) => (\n  <div id=\"notification-container\">\n    {_.map(alerts, ({\n      id, header, message, errors, bsStyle,\n    }) => (\n      <NotificationItem\n        key={id}\n        header={header}\n        message={message}\n        errors={errors}\n        bsStyle={bsStyle}\n        timeout={timeout}\n        onClose={() => clearAlert(id)}\n      />\n    ))}\n  </div>\n);\n\nNotificationList.propTypes = {\n  /**\n   * Sets the time in seconds how long should an alert be visible\n   */\n  timeout: PropTypes.number,\n  /**\n   * List of Alerts to be displayed\n   */\n  alerts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    header: PropTypes.string,\n    message: PropTypes.string.isRequired,\n    errors: PropTypes.arrayOf(PropTypes.string),\n    bsStyle: PropTypes.oneOf(['success', 'info', 'warning', 'danger']),\n  })),\n  /**\n   * Callback invoked when an alert has been dismissed\n   */\n  clearAlert: PropTypes.func,\n};\n\nNotificationList.defaultProps = {\n  alerts: [],\n  timeout: 30,\n  clearAlert: () => {},\n};\n\nexport default NotificationList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport { CHILDREN_PROP_TYPE } from '../utils';\n\n/**\n * Component meant for displaying errors below fields in a form\n */\nconst FieldError = ({ style = {}, children = [] }) => (\n  <strong className=\"text-danger\" style={style}>\n    <FontAwesome name=\"warning\" />\n    &nbsp;\n    <span className=\"validation-error\">{children}</span>\n  </strong>\n);\n\nFieldError.propTypes = {\n  /**\n   * Custom CSS style object\n   */\n  style: PropTypes.object,\n  /**\n   * Field Error message\n   */\n  children: CHILDREN_PROP_TYPE.isRequired,\n};\n\nFieldError.defaultProps = {\n  style: null,\n};\n\nexport default FieldError;\n","/* eslint-disable no-confusing-arrow, react/no-array-index-key */\nimport _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ControlLabel,\n  FormGroup,\n  HelpBlock,\n} from 'react-bootstrap';\n\nimport FieldError from './FieldError';\nimport { CHILDREN_PROP_TYPE } from '../utils';\n\n/**\n * Function to define the current validationState of the FormGroup. This is a prop that\n * the FormGroup component in React-Bootstrap expects\n *\n * @param touched Boolean of whether the field has been used (Redux-Form tracks this)\n * @param error Redux form error object\n * @returns {*} - Undefined if the field has not been touched,\n *              - 'error' if an error has been found\n *              - 'success' if there is no error and the field has been touched.\n */\nexport function getValidationState(touched, error) {\n  if (!touched) return undefined;\n  // Ensure the error prop is showing a real error. Sometimes an empty array is passed which still\n  // indicates there are no errors. If this happens we don't want to use an error class.\n  return !_.isEmpty(error) ? 'error' : 'success';\n}\n\n/**\n * Component that wraps Bootstrap's FormGroup, ControlLabel and HelpBlock elements\n * in order to show an Form field.\n *\n * Form field also renders a list of errors using the FieldErrors component.\n */\nconst FormField = ({\n  id, label, help, children, className, meta: { touched, error },\n}) => {\n  const validationState = getValidationState(touched, error);\n  // split the error by new line if it is not an array (a string will come back from the grammar validation,\n  // whereas an array is returned by the Django API). We split the grammar validation into multiple lines so\n  // it will display properly under the field\n  const errors = error && _.isString(error) ? error.split('\\n') : error;\n\n  return (\n    <FormGroup controlId={id} className={className} validationState={validationState}>\n      {label && <ControlLabel>{label}</ControlLabel>}\n\n      {children}\n\n      {help && (\n        <HelpBlock>\n          <small>{help}</small>\n        </HelpBlock>\n      )}\n\n      { // Only show if field is touched and not empty. Sometimes, the error prop is an empty\n        // array so we do not want to show an error for this.\n        touched && !_.isEmpty(error) && (\n          <FieldError>\n            {errors.map((e, i) => i ? <div key={`error-${i}`}>{e}</div> : e)}\n          </FieldError>\n        )\n      }\n    </FormGroup>\n  );\n};\n\nFormField.propTypes = {\n  /**\n   * Input element id\n   */\n  id: PropTypes.any,\n  /**\n   * Input label text\n   */\n  label: PropTypes.string,\n  /**\n   * Input help text\n   */\n  help: PropTypes.string,\n  /**\n   * Metadata object that is passed by the React Form\n   */\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n  }),\n  /**\n   * Additional class name\n   */\n  className: PropTypes.string,\n  /**\n   * The form field component\n   */\n  children: CHILDREN_PROP_TYPE.isRequired,\n};\n\nFormField.defaultProps = {\n  id: null,\n  help: null,\n  label: null,\n  className: null,\n  meta: { touched: false, error: [] },\n};\n\nexport default FormField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'react-bootstrap';\n\nimport FormField from './FormField';\n\n/**\n * Component that renders an HTML Checkbox field\n */\nconst CheckboxField = ({\n  input, label, help, meta, disabled,\n}) => (\n  <FormField id={input.id} help={help} meta={meta}>\n    <Checkbox\n      checked={!!input.value}\n      disabled={disabled}\n      onChange={evt => input.onChange(evt.target.checked)}\n    >\n      {label}\n    </Checkbox>\n  </FormField>\n);\n\nCheckboxField.propTypes = {\n  /**\n   * Original input field passed by the React Form\n   */\n  input: PropTypes.any.isRequired,\n  /**\n   * Input field label\n   */\n  label: PropTypes.string,\n  /**\n   * Help text used to describe the field's purpose\n   */\n  help: PropTypes.string,\n  /**\n   * Is this field disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Metadata object that is passed by the React Form\n   */\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n  }),\n};\n\nCheckboxField.defaultProps = {\n  help: null,\n  label: null,\n  disabled: false,\n  meta: { touched: false, error: [] },\n};\n\nexport default CheckboxField;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  Button,\n  Col,\n  FormControl,\n  Glyphicon,\n  InputGroup,\n  OverlayTrigger,\n} from 'react-bootstrap';\n\nimport { FormSection } from 'redux-form';\n\nimport { MagicRow } from '../../ui';\nimport { Utils } from '../..';\nimport FormField from '../FormField';\n\n\n/**\n * Component that renders a key-value field array.\n */\nconst KeyValueFieldArray = ({\n  fields, meta, label, help, keyField, valueField, emptyMessage,\n}) => (\n  <FormField\n    label={(\n      <span>\n        {label}\n\n        <Button\n          onClick={() => fields.push({})}\n          bsSize=\"xs\"\n          style={{ marginLeft: 6 }}\n        >\n          <Glyphicon glyph=\"plus\" />\n        </Button>\n      </span>\n    )}\n    help={help}\n    meta={meta}\n  >\n    <MagicRow colSizeKey=\"md\">\n      {fields.map((field, idx) => (\n        <Col\n          key={field}\n          xs={12}\n          sm={6}\n          md={4}\n          style={{ marginBottom: 15 }}\n        >\n          <FormSection name={field}>\n            <InputGroup>\n              {keyField}\n\n              <InputGroup.Addon style={{\n                borderLeft: 0,\n                borderRight: 0,\n                padding: '6px 3px',\n              }}\n              />\n\n              {valueField}\n\n              <InputGroup.Button>\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={Utils.tooltip('Remove')}\n                >\n                  <Button onClick={() => fields.remove(idx)}>\n                    <Glyphicon glyph=\"remove\" />\n                  </Button>\n                </OverlayTrigger>\n              </InputGroup.Button>\n            </InputGroup>\n          </FormSection>\n        </Col>\n      ))}\n    </MagicRow>\n\n    {emptyMessage && fields.length === 0 && emptyMessage}\n    <FormControl.Feedback />\n  </FormField>\n);\n\nKeyValueFieldArray.propTypes = {\n  /**\n   * Fields object passed by the React Form\n   */\n  fields: PropTypes.object.isRequired,\n  /**\n   * Input field label\n   */\n  label: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n  ]),\n  /**\n   * Help text used to describe the field's purpose\n   */\n  help: PropTypes.string,\n  /**\n   * Metadata object that is passed by the React Form\n   */\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n  }),\n  /**\n   * The element/text that will be displayed when no element exist\n   */\n  emptyMessage: PropTypes.element,\n  /**\n   * A custom element that will be rendered as the key part.\n   */\n  keyField: PropTypes.element.isRequired,\n  /**\n   * A custom element that will be rendered as the value part.\n   */\n  valueField: PropTypes.element.isRequired,\n};\n\nKeyValueFieldArray.defaultProps = {\n  help: null,\n  label: null,\n  emptyMessage: null,\n  meta: { touched: false, error: [] },\n};\n\nexport default KeyValueFieldArray;\n","import _ from 'lodash';\nimport React, { Component } from 'react';\n\nimport {\n  Glyphicon,\n  OverlayTrigger,\n  Panel,\n} from 'react-bootstrap';\nimport FontAwesome from 'react-fontawesome';\nimport { Utils } from '../../..';\n\n\nclass FieldArrayElement extends Component {\n  constructor({ initiallyMinimized }) {\n    super();\n    this.state = {\n      minimized: initiallyMinimized,\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { label } = this.props;\n    const { minimized } = this.state;\n\n    return _.some([\n      label !== nextProps.label,\n      minimized !== nextState.minimized,\n    ]);\n  }\n\n  setMinimized(minimized) {\n    this.setState(prevState => ({\n      ...prevState,\n      minimized,\n    }));\n  }\n\n  render() {\n    const {\n      label,\n      bsStyle,\n      dragHandleProps,\n      minimizable,\n      duplicable,\n      children,\n      onRemove,\n      onDuplicate,\n    } = this.props;\n\n    const {\n      minimized,\n    } = this.state;\n\n    const style = {\n      height: 'auto',\n      transition: 'all 2s ease-in, overflow 0s 2s',\n    };\n\n    if (minimized) {\n      style.height = 0;\n      style.overflow = 'hidden';\n    }\n\n    return (\n      <Panel bsStyle={bsStyle}>\n        <Panel.Body>\n          <div>\n            {dragHandleProps && (\n              <FontAwesome\n                name=\"arrows\"\n                style={{\n                  fontSize: '150%',\n                  marginRight: 6,\n                }}\n                {...dragHandleProps}\n              />\n            )}\n\n            <h4\n              style={{ display: 'inline' }}\n              className={bsStyle ? `text-${bsStyle}` : undefined}\n            >\n              {label || <i>Unnamed</i>}\n            </h4>\n\n            {onRemove && (\n              <OverlayTrigger\n                placement=\"top\"\n                overlay={Utils.tooltip('Remove')}\n              >\n                <button\n                  type=\"button\"\n                  className=\"pull-right close\"\n                  aria-label=\"Remove\"\n                  style={{ marginRight: 10, fontSize: 15 }}\n                  onClick={onRemove}\n                >\n                  <Glyphicon glyph=\"remove\" />\n                </button>\n              </OverlayTrigger>\n            )}\n\n            {minimizable && (\n              <OverlayTrigger\n                placement=\"top\"\n                overlay={Utils.tooltip(minimized ? 'Maximize' : 'Minimize')}\n              >\n                <button\n                  type=\"button\"\n                  className=\"pull-right close\"\n                  aria-label=\"Minimize\"\n                  style={{ marginRight: 10, fontSize: 15 }}\n                  onClick={() => this.setMinimized(!minimized)}\n                >\n                  <span aria-hidden={minimized}>\n                    <Glyphicon glyph={minimized ? 'plus' : 'minus'} />\n                  </span>\n                </button>\n              </OverlayTrigger>\n            )}\n\n            {duplicable && (\n              <OverlayTrigger\n                placement=\"top\"\n                overlay={Utils.tooltip('Duplicate')}\n              >\n                <button\n                  type=\"button\"\n                  className=\"pull-right close\"\n                  aria-label=\"Duplicate\"\n                  style={{ marginRight: 10, fontSize: 15 }}\n                  onClick={onDuplicate}\n                >\n                  <Glyphicon glyph=\"duplicate\" />\n                </button>\n              </OverlayTrigger>\n            )}\n          </div>\n\n          <div style={{ marginTop: minimized ? 0 : 10 }}>\n            <div style={style}>\n              {children}\n            </div>\n          </div>\n        </Panel.Body>\n      </Panel>\n    );\n  }\n}\n\n\nexport default FieldArrayElement;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport {\n  DragDropContext,\n  Draggable,\n  Droppable,\n} from 'react-beautiful-dnd';\n\n\nexport default class SortableList extends Component {\n  static propTypes = {\n    direction: PropTypes.string.isRequired,\n    onDragEnd: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const {\n      direction = 'vertical',\n      type,\n      onDragEnd,\n      dragHandle,\n      children,\n    } = this.props;\n\n    return (\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable\n          droppableId=\"droppable\"\n          type={type}\n          direction={direction}\n        >\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              className={classNames('drag-list', direction, { dropping: snapshot.isDraggingOver })}\n            >\n              {React.Children.map(children, (child, index) => (\n                <Draggable\n                  key={child.key}\n                  draggableId={child.key}\n                  index={index}\n                >\n                  {(providedDraggable, draggableSnapshot) => (\n                    <div\n                      ref={providedDraggable.innerRef}\n                      {...providedDraggable.draggableProps}\n                      className={classNames('drag-item', { dragging: draggableSnapshot.isDraggingOver })}\n                    >\n                      {dragHandle ? (\n                        React.cloneElement(child, { dragHandleProps: providedDraggable.dragHandleProps })\n                      ) : (\n                        <div {...providedDraggable.dragHandleProps}>\n                          {child}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n","import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport {\n  FormControl,\n  Glyphicon,\n  OverlayTrigger,\n} from 'react-bootstrap';\nimport { DropdownButton } from '../../../ui';\nimport { Utils } from '../../..';\n\nimport FormField from '../../FormField';\nimport FieldArrayElement from './FieldArrayElement';\nimport SortableList from './SortableList';\n\n\n/**\n * Component that renders a vertical field array using the provided innerComponent prop as its elements.\n */\nclass VerticalFieldArray extends Component {\n  static propTypes = {\n    /**\n     * Fields object passed by the React Form\n     */\n    fields: PropTypes.object.isRequired,\n    /**\n     * Input field label\n     */\n    label: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.element,\n    ]),\n    /**\n     * Help text used to describe the field's purpose\n     */\n    help: PropTypes.string,\n    /**\n     * Metadata object that is passed by the React Form\n     */\n    meta: PropTypes.shape({\n      touched: PropTypes.bool,\n      error: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.array,\n      ]),\n    }),\n    /**\n     * The element/text that will be displayed when no element exist\n     */\n    emptyMessage: PropTypes.element,\n    /**\n     * The component that will be rendered as an element\n     */\n    innerComponent: PropTypes.element.isRequired,\n    /**\n     * This label is used in the default renderKey prop. It is the prefix used in the element name\n     */\n    labelDefault: PropTypes.string,\n    /**\n     * The tooltip that will be displayed when hovering over the add button\n     */\n    addTooltip: PropTypes.string,\n    /**\n     * If elements are able to be minimized or not\n     */\n    minimizable: PropTypes.bool,\n    /**\n     * If elements are able to be duplicated or not\n     */\n    duplicable: PropTypes.bool,\n    /**\n     * If elements are able to be sorted or not\n     */\n    sortable: PropTypes.bool,\n    /**\n     * A function that receives the value object and its index and returns a key prop that will be used by the\n     * element\n     */\n    // eslint-disable-next-line react/require-default-props\n    renderKey: PropTypes.func,\n    /**\n     * A function that receives the value object and its index and returns an element to be displayed as the element\n     * header\n     */\n    // eslint-disable-next-line react/require-default-props\n    renderLabel: PropTypes.func,\n    /**\n     * The initial field object that should be used when onAdd is not defined.\n     */\n    initialFieldValue: PropTypes.object,\n    /**\n     * Callback function that transforms and adds a new element. If not defined, initialFieldValue will be used\n     * instead. Callback receives no argument and should return the new object object.\n     */\n    onAdd: PropTypes.func,\n    /**\n     * Callback function that transforms the current element into a duplicated one and adds it. Callback receives\n     * the current object as argument and should return the new object.\n     */\n    onDuplicate: PropTypes.func,\n  };\n\n  static defaultProps = {\n    help: null,\n    label: null,\n    emptyMessage: null,\n    meta: { touched: false, error: [] },\n    labelDefault: 'New',\n    addTooltip: 'Click to add',\n    minimizable: true,\n    duplicable: false,\n    sortable: false,\n    initialFieldValue: {},\n    onAdd: null,\n    onDuplicate: null,\n  };\n\n  state = {\n    firstRender: true,\n  };\n\n  componentDidMount() {\n    this.setState({ firstRender: false });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const {\n      fields,\n    } = this.props;\n\n    return _.some([\n      !_.isEqual(fields.getAll() !== nextProps.fields.getAll()),\n    ]);\n  }\n\n  renderField(field, index) {\n    const\n      {\n        fields,\n        innerComponent: InnerComponent,\n        innerProps,\n        labelDefault,\n        renderKey = (value, idx) => idx,\n        renderLabel = (value, idx) => `${labelDefault} ${idx + 1}`,\n        bsStyle,\n        minimizable,\n        duplicable,\n        onDuplicate,\n        onRemove,\n        innerRef,\n      } = this.props;\n\n\n    const {\n      firstRender,\n    } = this.state;\n\n    const value = fields.get(index);\n    const key = renderKey(value, index);\n    const label = renderLabel(value, index);\n\n    const content = (\n      <InnerComponent\n        {...innerProps}\n        index={index}\n        field={field}\n        ref={/* Work with @connected components */\n          ref => innerRef && innerRef(_.get(ref, 'refs.wrappedInstance', ref))\n        }\n      />\n    );\n\n    return (\n      <FieldArrayElement\n        key={key}\n        label={label}\n        bsStyle={bsStyle}\n        initiallyMinimized={minimizable && firstRender}\n        minimizable={minimizable}\n        duplicable={duplicable}\n        onRemove={() => {\n          if (onRemove) onRemove(index);\n          fields.remove(index);\n        }}\n        onDuplicate={() => {\n          const currentValue = fields.get(index);\n          const item = onDuplicate ? onDuplicate(currentValue) : currentValue;\n          fields.push(item);\n        }}\n      >\n        {content}\n      </FieldArrayElement>\n    );\n  }\n\n  render() {\n    const\n      {\n        label,\n        fields,\n        meta,\n        help,\n        initialFieldValue,\n        sortable,\n        addTooltip,\n        addChoices,\n        onAdd,\n        emptyMessage,\n      } = this.props;\n\n    const pushItem = (selected) => {\n      const item = onAdd ? onAdd(selected) : initialFieldValue;\n      fields.push(item);\n    };\n\n    const fieldArray = fields.map((field, index) => this.renderField(field, index));\n\n    return (\n      <FormField\n        label={(\n          <span>\n            {label}\n          </span>\n        )}\n        help={help}\n        meta={meta}\n      >\n        {sortable ? (\n          <SortableList\n            dragHandle\n            onDragEnd={({ source, destination }) => {\n              if (!destination) {\n                return null;\n              }\n\n              return fields.move(source.index, destination.index);\n            }}\n          >\n            {fieldArray}\n          </SortableList>\n        ) : (\n          fieldArray\n        )}\n\n        {emptyMessage && fields.length === 0 && (\n          <div style={{ textAlign: 'center', margin: '10px 0px' }}>{emptyMessage}</div>\n        )}\n        <OverlayTrigger\n          placement=\"top\"\n          overlay={Utils.tooltip(addTooltip)}\n        >\n          <DropdownButton\n            id=\"field-list-add-button-bottom\"\n            className=\"text-center\"\n            title={<Glyphicon glyph=\"plus\" />}\n            style={{ display: 'block' }}\n            bsStyle=\"primary\"\n            disabled={addChoices && addChoices.length === 0}\n            onSelect={pushItem}\n          >\n            {addChoices}\n          </DropdownButton>\n        </OverlayTrigger>\n        <FormControl.Feedback />\n      </FormField>\n    );\n  }\n}\n\nexport default VerticalFieldArray;\n","import VerticalFieldArray from './VerticalFieldArray';\n\nexport default VerticalFieldArray;\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormControl } from 'react-bootstrap';\n\nimport FormField from './FormField';\n\n/**\n * Generalized Form Control component.\n *\n * Different component types are usable via the componentClass parameter.  When component is undefined, it'll\n * default as a text field.  Other options:\n *  - textarea\n *  - select (but use the SelectField component instead)\n */\nconst InputField = ({\n  input, label, help, meta, onChangeValue, componentClass, ...props\n}) => (\n  <FormField id={input.id} label={label} help={help} meta={meta}>\n    <FormControl\n      {...input}\n      {...props}\n      componentClass={componentClass}\n      onChange={(selected) => {\n        input.onChange(selected);\n        onChangeValue(selected);\n      }}\n    />\n    <FormControl.Feedback />\n  </FormField>\n);\n\nInputField.propTypes = {\n  /**\n   * Original input field passed by the React Form\n   */\n  input: PropTypes.any.isRequired,\n  /**\n   * Input field label\n   */\n  label: PropTypes.string,\n  /**\n   * Help text used to describe the field's purpose\n   */\n  help: PropTypes.string,\n  /**\n   * Metadata object that is passed by the React Form\n   */\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n  }),\n  /**\n   * Custom element type for this field\n   */\n  componentClass: FormControl.propTypes.componentClass,\n  /**\n   * Callback function that returns the value of the input when it's changed\n   */\n  onChangeValue: PropTypes.func,\n};\n\nInputField.defaultProps = {\n  help: null,\n  label: null,\n  meta: { touched: false, error: [] },\n  onChangeValue: _.noop,\n  componentClass: 'input',\n};\n\nexport default InputField;\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InputField from './InputField';\n\nconst PasswordField = ({\n  input, label, placeholder, help, meta, disabled, onChangeValue,\n}) => (\n  <InputField\n    type=\"password\"\n    input={input}\n    label={label}\n    help={help}\n    meta={meta}\n    disabled={disabled}\n    placeholder={placeholder}\n    onChange={onChangeValue}\n  />\n);\n\nPasswordField.propTypes = {\n  /**\n   * Original input field passed by the React Form\n   */\n  input: PropTypes.any.isRequired,\n  /**\n   * Input field label\n   */\n  label: PropTypes.string,\n  /**\n   * Help text used to describe the field's purpose\n   */\n  help: PropTypes.string,\n  /**\n   * Callback function that returns the value of the input when it's changed\n   */\n  onChangeValue: PropTypes.func,\n  /**\n   * Is this field disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Placeholder text for textarea input field\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Metadata object that is passed by the React Form\n   */\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n  }),\n};\n\nPasswordField.defaultProps = {\n  help: null,\n  label: null,\n  disabled: false,\n  placeholder: null,\n  onChangeValue: _.noop,\n  meta: { touched: false, error: [] },\n};\n\nexport default PasswordField;\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InputRange from 'react-input-range';\nimport FormField from './FormField';\n\nconst parse = value => _.toNumber(value);\n\nconst RangeField = ({\n  input, label, formatLabel, disabled, help, min, max, step, meta, onChangeValue,\n}) => (\n  <FormField id={input.id} label={label} help={help} meta={meta}>\n    <InputRange\n      value={parse(input.value)}\n      style={{\n        display: 'block',\n        width: '100%',\n      }}\n      min={min}\n      max={max}\n      step={step}\n      disabled={disabled}\n      formatLabel={formatLabel}\n      onChange={(value) => {\n        input.onChange(value);\n        onChangeValue(value);\n      }}\n      onChangeComplete={value => input.onBlur(value)}\n    />\n  </FormField>\n);\n\nRangeField.propTypes = {\n  /**\n   * Original input field passed by the React Form\n   */\n  input: PropTypes.any.isRequired,\n  /**\n   * Minimum value\n   */\n  min: PropTypes.number.isRequired,\n  /**\n   * Maximum value\n   */\n  max: PropTypes.number.isRequired,\n  /**\n   * Counter step\n   */\n  step: PropTypes.number,\n  /**\n   * Input field label\n   */\n  label: PropTypes.string,\n  /**\n   * Function used to format the range input label\n   */\n  formatLabel: PropTypes.func,\n  /**\n   * Help text used to describe the field's purpose\n   */\n  help: PropTypes.string,\n  /**\n   * Is this field disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Callback function that returns the value of the input when it's changed\n   */\n  onChangeValue: PropTypes.func,\n  /**\n   * Metadata object that is passed by the React Form\n   */\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n  }),\n};\n\nRangeField.defaultProps = {\n  step: 1,\n  help: null,\n  label: null,\n  disabled: false,\n  onChangeValue: _.noop,\n  formatLabel: _.identity,\n  meta: { touched: false, error: [] },\n};\n\nexport default RangeField;\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Select from '../ui/Select';\nimport FormField from './FormField';\n\n/**\n * Component that encapsulates the `react-select` component\n */\nconst SelectField = ({\n  input,\n  label,\n  defaultValue,\n  help,\n  meta,\n  options,\n  valueKey,\n  isLoading,\n  clearable,\n  multi,\n  creatable,\n  async,\n  onChangeValue,\n  innerRef,\n  onChangeWithValue = true,\n  denormalize,\n  ...props\n}) => {\n  const denormalized = (denormalize ? denormalize(input.value) : input.value) || defaultValue;\n\n  return (\n    <FormField id={input.id} label={label} help={help} meta={meta}>\n      <Select\n        value={denormalized}\n        options={options}\n        clearable={clearable}\n        multi={multi}\n        onChange={(selection) => {\n          let value = selection;\n\n          // Passing the onChangeWithValue prop means the React-Select 'value' key will be used\n          // onChangeValue.  If this is false, the entire option object is stored, meaning additional data\n          // can be stored onChangeValue if needed.\n          if (onChangeWithValue) {\n            value = multi\n              ? selection && _.map(selection, valueKey)\n              : selection && selection[valueKey];\n          }\n\n          input.onChange(value);\n          onChangeValue(value);\n        }}\n        onBlur={() => input.onBlur()}\n        onFocus={() => input.onFocus()}\n        isLoading={isLoading}\n        ref={innerRef}\n        {...props}\n      />\n    </FormField>\n  );\n};\n\nSelectField.propTypes = {\n  /**\n   * Original input field passed by the React Form\n   */\n  input: PropTypes.any.isRequired,\n  /**\n   * Input field label\n   */\n  label: PropTypes.string,\n  /**\n   * Help text used to describe the field's purpose\n   */\n  help: PropTypes.string,\n  /**\n   * Metadata object that is passed by the React Form\n   */\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n  }),\n  /**\n   * Key used to extract the value from the options object. Defaults to `value`\n   */\n  valueKey: PropTypes.string,\n  /**\n   * Default value for the select field\n   */\n  defaultValue: PropTypes.string,\n  /**\n   * Available select options\n   */\n  options: PropTypes.arrayOf(PropTypes.any),\n  /**\n   * Should the component show a loading indicator\n   */\n  isLoading: PropTypes.bool,\n  /**\n   * Can a value be deselected\n   */\n  clearable: PropTypes.bool,\n  /**\n   * Could a\n   */\n  creatable: PropTypes.bool,\n  /**\n   * Is the data loaded asynchronously\n   */\n  async: PropTypes.bool,\n  /**\n   * Function that can transform the original input value\n   */\n  denormalize: PropTypes.bool,\n  /**\n   * Callback executed when a value is selected\n   */\n  onChangeValue: PropTypes.func,\n  /**\n   * Passing the onChangeWithValue prop means the React-Select 'value' key will be used\n   * onChangeValue.\n   *\n   * If this is false, the entire option object is stored, meaning additional data\n   * can be stored onChangeValue if needed.\n   */\n  onChangeWithValue: PropTypes.bool,\n};\n\nSelectField.defaultProps = {\n  help: null,\n  label: null,\n  meta: { touched: false, error: [] },\n  defaultValue: null,\n  valueKey: 'value',\n  options: [],\n  isLoading: false,\n  clearable: false,\n  creatable: false,\n  async: false,\n  denormalize: false,\n  onChangeValue: () => {},\n  onChangeWithValue: true,\n};\n\nexport default SelectField;\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InputField from './InputField';\n\n/**\n * A generic numeric spinner input Redux Form component which uses a React Bootstrap FormControl.\n * This component is meant to be passed into a Redux Forms Field component.\n */\nconst SpinnerField = ({\n  input, label, placeholder, min, max, step, disabled, help, meta, onChangeValue,\n}) => (\n  <InputField\n    componentClass=\"input\"\n    type=\"number\"\n    placeholder={placeholder}\n    input={input}\n    label={label}\n    min={min}\n    max={max}\n    step={step || 1}\n    help={help}\n    meta={meta}\n    disabled={disabled}\n    onChange={onChangeValue}\n  />\n);\n\nSpinnerField.propTypes = {\n  /**\n   * Original input field passed by the React Form\n   */\n  input: PropTypes.any.isRequired,\n  /**\n   * Minimum value\n   */\n  min: PropTypes.number.isRequired,\n  /**\n   * Maximum value\n   */\n  max: PropTypes.number.isRequired,\n  /**\n   * Counter step\n   */\n  step: PropTypes.number,\n  /**\n   * Input field label\n   */\n  label: PropTypes.string,\n  /**\n   * Help text used to describe the field's purpose\n   */\n  help: PropTypes.string,\n  /**\n   * Callback function that returns the value of the input when it's changed\n   */\n  onChangeValue: PropTypes.func,\n  /**\n   * Is this field disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Placeholder text for textarea input field\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Metadata object that is passed by the React Form\n   */\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n  }),\n};\n\nSpinnerField.defaultProps = {\n  step: 1,\n  help: null,\n  label: null,\n  disabled: false,\n  placeholder: null,\n  onChangeValue: _.noop,\n  meta: { touched: false, error: [] },\n};\n\nexport default SpinnerField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Col,\n  Row,\n  Button,\n  ButtonToolbar,\n} from 'react-bootstrap';\nimport FieldError from './FieldError';\n\n/**\n * Renders a Bootstrap Row component with a Button toolbar on the right hand side.\n * Toolbar contains 2 buttons, one that would reset the form state and one that would\n * submit the form data.\n */\nconst SubmitResetRow = ({\n  enabled, pristine, submitting, submitFailed, error, valid, reset,\n}) => (\n  <Row>\n    <Col xs={12}>\n      <ButtonToolbar className=\"pull-right\">\n        <Button\n          bsStyle=\"warning\"\n          bsSize=\"large\"\n          disabled={pristine || submitting}\n          onClick={reset}\n        >\n          Reset\n        </Button>\n        <Button\n          bsStyle=\"primary\"\n          bsSize=\"large\"\n          type=\"submit\"\n          disabled={enabled === false || submitting}\n        >\n          Submit\n        </Button>\n      </ButtonToolbar>\n\n      {error\n        ? <FieldError>{error}</FieldError>\n        : (submitFailed && !valid) && <FieldError>The form is invalid. Please fix any errors.</FieldError>}\n    </Col>\n  </Row>\n);\n\nSubmitResetRow.propTypes = {\n  /**\n   * Is the form enabled\n   */\n  enabled: PropTypes.bool,\n  /**\n   * When this property is `false` it means that the forms field values\n   * have been changed. Meaning the form is in a `dirty` state.\n   */\n  pristine: PropTypes.bool,\n  /**\n   * Is the form being submitted\n   */\n  submitting: PropTypes.bool,\n  /**\n   * When this property is `true` it means the form submit hook threw an error\n   */\n  submitFailed: PropTypes.bool,\n  /**\n   * When this property is `false` it means that the forms has invalid values\n   */\n  valid: PropTypes.bool,\n  /**\n   * Error message to be shown in the component\n   */\n  error: PropTypes.string,\n  /**\n   * Callback function invoked when the reset button is clicked\n   */\n  reset: PropTypes.func.isRequired,\n};\n\nSubmitResetRow.defaultProps = {\n  enabled: true,\n  pristine: true,\n  submitting: false,\n  submitFailed: false,\n  valid: true,\n  error: null,\n};\n\nexport default SubmitResetRow;\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport InputField from './InputField';\n\n/**\n * Component that renders the Textarea input field\n */\nconst TextAreaField = ({\n  input, label, placeholder, rows, cols, help, meta, disabled, onChangeValue,\n}) => (\n  <InputField\n    input={input}\n    label={label}\n    help={help}\n    meta={meta}\n    rows={rows}\n    cols={cols}\n    disabled={disabled}\n    placeholder={placeholder}\n    onChange={onChangeValue}\n    componentClass=\"textarea\"\n  />\n);\n\nTextAreaField.propTypes = {\n  /**\n   * Original input field passed by the React Form\n   */\n  input: PropTypes.any.isRequired,\n  /**\n   * Input field label\n   */\n  label: PropTypes.string,\n  /**\n   * Help text used to describe the field's purpose\n   */\n  help: PropTypes.string,\n  /**\n   * Callback function that returns the value of the input when it's changed\n   */\n  onChangeValue: PropTypes.func,\n  /**\n   * Is this field disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Placeholder text for textarea input field\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Number of columns that this textarea should have\n   */\n  cols: PropTypes.number,\n  /**\n   * Number of rows that this textarea should have\n   */\n  rows: PropTypes.number,\n  /**\n   * Metadata object that is passed by the React Form\n   */\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n  }),\n};\n\nTextAreaField.defaultProps = {\n  help: null,\n  label: null,\n  disabled: false,\n  placeholder: null,\n  cols: 6,\n  rows: 4,\n  onChangeValue: _.noop,\n  meta: { touched: false, error: [] },\n};\n\nexport default TextAreaField;\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport InputField from './InputField';\n\n/**\n * Component that renders an HTML input field\n */\nconst TextField = ({\n  input, label, placeholder, help, meta, disabled, type, onChangeValue,\n}) => (\n  <InputField\n    type={type}\n    input={input}\n    label={label}\n    help={help}\n    meta={meta}\n    disabled={disabled}\n    placeholder={placeholder}\n    onChange={onChangeValue}\n  />\n);\n\nTextField.propTypes = {\n  /**\n   * Original input field passed by the React Form\n   */\n  input: PropTypes.any.isRequired,\n  /**\n   * Input type\n   */\n  type: PropTypes.string,\n  /**\n   * Input field label\n   */\n  label: PropTypes.string,\n  /**\n   * Help text used to describe the field's purpose\n   */\n  help: PropTypes.string,\n  /**\n   * Callback function that returns the value of the input when it's changed\n   */\n  onChangeValue: PropTypes.func,\n  /**\n   * Is this field disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Placeholder text for textarea input field\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Metadata object that is passed by the React Form\n   */\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n  }),\n};\n\nTextField.defaultProps = {\n  help: null,\n  label: null,\n  disabled: false,\n  placeholder: null,\n  type: 'text',\n  onChangeValue: _.noop,\n  meta: { touched: false, error: [] },\n};\n\nexport default TextField;\n","/* eslint-disable consistent-return */\nimport _ from 'lodash';\nimport { assert } from '../utils';\n\nconst TEMPLATE_REGEX = /{(\\d+)}/g;\nconst ALPHANUMERIC_REGEX = /^[a-zA-Z\\s+\\-_]*$/;\n\n// URL Regex Table: https://mathiasbynens.be/demo/url-regex\n// Source code: https://gist.github.com/dperini/729294\nconst URL_REGEX = new RegExp('^'\n    // protocol identifier (optional)\n    // short syntax // still required\n    + '(?:(?:(?:https?|ftp):)?\\\\/\\\\/)'\n    // user:pass BasicAuth (optional)\n    + '(?:\\\\S+(?::\\\\S*)?@)?'\n    + '(?:'\n      // IP address exclusion\n      // private & local networks\n      + '(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})'\n      + '(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})'\n      + '(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})'\n      // IP address dotted notation octets\n      // excludes loopback network 0.0.0.0\n      // excludes reserved space >= 224.0.0.0\n      // excludes network & broacast addresses\n      // (first & last IP address of each class)\n      + '(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])'\n      + '(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}'\n      + '(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))'\n    + '|'\n      // host & domain names, may end with dot\n      // can be replaced by a shortest alternative\n      // (?![-_])(?:[-\\\\w\\\\u00a1-\\\\uffff]{0,63}[^-_]\\\\.)+\n      + '(?:'\n        + '(?:'\n          + '[a-z0-9\\\\u00a1-\\\\uffff]'\n          + '[a-z0-9\\\\u00a1-\\\\uffff_-]{0,62}'\n        + ')?'\n        + '[a-z0-9\\\\u00a1-\\\\uffff]\\\\.'\n      + ')+'\n      // TLD identifier name, may end with dot\n      + '(?:[a-z\\\\u00a1-\\\\uffff]{2,}\\\\.?)'\n    + ')'\n    // port number (optional)\n    + '(?::\\\\d{2,5})?'\n    // resource path (optional)\n    + '(?:[/?#]\\\\S*)?'\n  + '$', 'i');\n\n/**\n * Formats the error message template.\n *\n * @example\n * formatTemplate('Value {0} is not a {1}', ['value', 'number']);\n * -> `Value foo is not a number`\n *\n * @param {String} template Error template\n * @param {Array}  args     Arguments used to replace the placeholders in the template\n * @return {String} Formatted string\n */\nexport const formatTemplate = (template, args) => template.replace(TEMPLATE_REGEX, (match, number) => {\n  if (_.isUndefined(args[number])) {\n    return match;\n  }\n  return args[number];\n});\n\n/**\n * Required value, for strings and arrays this also enforces that the value is not empty\n *\n * @param {String} errorTemplate Error message template\n * @return {String|undefined}\n */\nexport const required = (errorTemplate = 'Required') => (value) => {\n  if (_.isNull(value) || _.isUndefined(value) || (_.isString(value) && !value.trim())) {\n    return errorTemplate;\n  }\n  if ((_.isArray(value) || _.isObject(value)) && _.isEmpty(value)) {\n    return errorTemplate;\n  }\n};\n\n/**\n * Checks if the value matches the provided regular expression (pattern)\n *\n * @param {RegExp} pattern       Regular expression\n * @param {String} errorTemplate Error message template\n * @return {String|undefined}\n */\nexport const regex = (pattern, errorTemplate = 'Must match the pattern {0}') => {\n  assert(_.isRegExp(pattern), 'Pattern arg must be a regex');\n\n  return (value) => {\n    // Empty values are allowed\n    if (_.isNull(value) || _.isUndefined(value)) {\n      return;\n    }\n    if (!_.isString(value) || !value.match(pattern)) {\n      return formatTemplate(errorTemplate, [pattern]);\n    }\n  };\n};\n\n/**\n * Checks if the value is a valid URL\n *\n * @param {String} errorTemplate Error message template\n * @return {String|undefined}\n */\nexport const url = (errorTemplate = 'May contain only letters, numbers, dashes and underscores') => regex(\n  URL_REGEX, errorTemplate,\n);\n\n/**\n * Checks if the value is a valid alphanumeric string\n *\n * @param {String} errorTemplate Error message template\n * @return {String|undefined}\n */\nexport const alpha = (errorTemplate = 'May contain only letters, underscores, dashes and spaces') => regex(\n  ALPHANUMERIC_REGEX, errorTemplate,\n);\n\n/**\n * Checks if the value is contained in a list of accepted values\n *\n * @param {Array} values Allowed values\n * @return {String|undefined}\n */\nexport const containing = (values = []) => (value) => {\n  if (!_.includes(values, value)) {\n    return `The following values are allowed: [${_.join(values, ', ')}]`;\n  }\n};\n\n/**\n * Checks if the value is not contained in a list of values\n *\n * @param {Array} values Disallowed values\n * @return {String|undefined}\n */\nexport const excluding = (values = []) => (value) => {\n  if (_.includes(values, value)) {\n    return `The following values are not allowed: [${_.join(values, ', ')}]`;\n  }\n};\n\nfunction isValidLimitArg(limit) {\n  return _.isInteger(limit) && limit >= 0;\n}\n\nfunction getLength(value) {\n  switch (typeof value) {\n    case 'number':\n      return value;\n\n    case 'string':\n      // check if it's a number\n      // eslint-disable-next-line no-case-declarations\n      const number = _.toNumber(value);\n      if (_.isNaN(number)) {\n        return value.length;\n      }\n      return value;\n\n    case 'object':\n      // typeof null === \"object\", let's ignore it\n      if (_.isNull(value)) {\n        return;\n      }\n\n      return _.size(value);\n    case 'boolean':\n      return;\n    default:\n      throw new Error(`Could not get length from value: '${value}'.`);\n  }\n}\n\nconst validateLength = (validate, formatError) => (value) => {\n  if (_.isNull(value) || _.isUndefined(value)) {\n    return;\n  }\n\n  const length = getLength(value);\n\n  if (_.isUndefined(length) || !validate(length)) {\n    return formatError(value);\n  }\n};\n\nconst minErrorTemplates = {\n  number: 'Must be at least {0}',\n  string: 'Must contain at least {0} characters',\n  object: 'Must contain at least {0} items',\n};\n\n/**\n * Checks if the value is not lower than the allowed minimum value\n *\n * @param {Number} limit         Minimum value\n * @param {String} errorTemplate Error message template\n * @return {String|undefined}\n */\nexport const min = (limit, errorTemplate) => {\n  assert(isValidLimitArg(limit), 'Limit arg must be a positive whole number');\n\n  return validateLength(\n    k => limit <= k,\n    v => formatTemplate(errorTemplate || minErrorTemplates[typeof v], [limit]),\n  );\n};\n\nconst maxErrorTemplates = {\n  number: 'Must be at most {0}',\n  string: 'Must contain at most {0} characters',\n  object: 'Must contain at most {0} items',\n};\n\n/**\n * Checks if the value is not higher than the allowed maximum value\n *\n * @param {Number} limit         Maximum value\n * @param {String} errorTemplate Error message template\n * @return {String|undefined}\n */\nexport const max = (limit, errorTemplate) => {\n  assert(isValidLimitArg(limit), 'Limit arg must be a positive whole number');\n\n  return validateLength(\n    k => limit >= k,\n    v => formatTemplate(errorTemplate || maxErrorTemplates[typeof v], [limit]),\n  );\n};\n\nconst betweenErrorTemplates = {\n  number: 'Must be between {0} and {1}',\n  string: 'Must contain between {0} and {1} characters',\n  object: 'Must contain between {0} and {1} items',\n};\n\n/**\n * Checks if the value is inside the specified range\n *\n * @param {Number} min         Minimum range value\n * @param {Number} max         Maximum range value\n * @param {String} errorTemplate Error message template\n * @return {String|undefined}\n */\n// eslint-disable-next-line no-shadow\nexport const between = (min, max, errorTemplate) => {\n  assert(isValidLimitArg(min), 'Min arg must be a positive whole number');\n  assert(isValidLimitArg(max), 'Max arg must be a positive whole number');\n  assert(min < max, 'Min arg can not be larger than max arg');\n\n  return validateLength(\n    k => min <= k && max >= k,\n    v => formatTemplate(errorTemplate || betweenErrorTemplates[typeof v], [min, max]),\n  );\n};\n","import _ from 'lodash';\n\nfunction mutateDeep(state, path, mutator) {\n  const [top, ...rest] = path.split('.');\n\n  if (rest.length === 0) {\n    const nextState = {\n      ...state,\n      [top]: mutator(state[top]),\n    };\n\n    // Remove the next value if undefined\n    if (undefined === nextState[top]) {\n      delete nextState[top];\n    }\n\n    return nextState;\n  }\n\n  return {\n    ...state,\n    [top]: mutateDeep(state[top], rest.join('.'), mutator),\n  };\n}\n\n\n/**\n * Set a deep value in the redux state.\n *\n * @param state\n * @param path\n * @param value\n */\nexport const setInState = (state, path, value) => mutateDeep(state, path, () => value);\n\n/**\n * Omit a deep value in the redux state.\n *\n * @param state\n * @param path\n */\nexport const omitInState = (state, path) => mutateDeep(state, path, () => undefined);\n\n/**\n * Merge an object at a deep path in the redux state.\n *\n * @param state\n * @param path\n * @param value\n */\nexport const mergeInState = (state, path, value) => mutateDeep(\n  state, path, currValue => _.merge(_.cloneDeep(currValue), value),\n);\n\n/**\n * Assigns values from an object at a deep path in the redux state.\n *\n * @param state\n * @param path\n * @param value\n */\nexport const assignInState = (state, path, value) => mutateDeep(\n  state, path, currValue => _.assign(_.cloneDeep(currValue), value),\n);\n","import axios from 'axios';\nimport RequestManager from 'axios-request-manager';\nimport { assert } from '../utils';\n\nconst manager = new RequestManager();\n\nconst invokeAction = (actions = {}, name, ...args) => {\n  const action = actions[name];\n  assert(typeof actions[name] === 'function', `Your Actions object must have a '${name}' Action handler function`);\n  return action(...args);\n};\n\nconst constructHeaders = headers => ({\n  ...manager.getCSRFHeader(), ...headers,\n});\n\nconst handleSuccess = (dispatch, actions, name, ...args) => ({ data }) => dispatch(\n  invokeAction(actions, name, data, ...args),\n);\n\nconst handleError = (dispatch, actions, name, ...args) => (error) => {\n  if (axios.isCancel(error)) {\n    return null;\n  }\n  return dispatch(invokeAction(actions, name, error, ...args));\n};\n\n/**\n * Executes a GET request to an list REST API endpoint. The `receiveList` should\n * accept an object that contains a list of results.\n *\n * @param {String} url     URL of the endpoint\n * @param {Object} query   URL query parameters\n * @param {Object} actions Redux Actions object\n * @param {Object} headers Custom HTTP Headers\n * @return {Function}\n */\nexport const requestList = (url, query = {}, actions = {}, headers = {}) => (dispatch) => {\n  dispatch(invokeAction(actions, 'requestList', query));\n\n  const cancelToken = manager.cancelAxiosAndGetNextToken(url);\n\n  return axios.get(url, {\n    params: query,\n    cancelToken,\n    headers: constructHeaders(headers),\n  }).then(\n    handleSuccess(dispatch, actions, 'receiveList', query),\n    handleError(dispatch, actions, 'receiveList', query),\n  );\n};\n\n/**\n * Executes a GET request to a details REST API endpoint. The `receiveDetails` should\n * accept a single resource object.\n *\n * @param {String} alias   Identifier alias of the resource\n * @param {String} url     URL of the endpoint\n * @param {Object} actions Redux Actions object\n * @param {Object} headers Custom HTTP Headers\n * @return {Function}\n */\nexport const requestDetails = (alias, url, actions, headers = {}) => (dispatch) => {\n  dispatch(invokeAction(actions, 'requestDetails', alias));\n\n  const cancelToken = manager.cancelAxiosAndGetNextToken(url);\n\n  return axios.get(url, {\n    cancelToken,\n    headers: constructHeaders(headers),\n  }).then(\n    handleSuccess(dispatch, actions, 'receiveDetails', alias),\n    handleError(dispatch, actions, 'receiveDetails', alias),\n  );\n};\n\n\n/**\n * Executes a POST or PUT request to a details REST API endpoint with resource attributes.\n * The `receiveDetails` should accept a single resource object.\n *\n * @param {String} alias     Identifier alias of the resource\n * @param {Object} data      Resource attributes that should be stored\n * @param {String} url       URL of the endpoint\n * @param {Object} actions   Redux Actions object\n * @param {Boolean} creating Should the resource be created or edited\n * @param {Object} headers   Custom HTTP Headers\n * @return {Function}\n */\nexport const requestStore = (alias, data, url, actions, creating = false, headers = {}) => (dispatch) => {\n  if (alias) {\n    dispatch(invokeAction(actions, 'requestStore', alias));\n  }\n\n  const executor = creating ? axios.post : axios.put;\n  const cancelToken = manager.cancelAxiosAndGetNextToken(url);\n\n  return executor(url, data, {\n    cancelToken,\n    headers: constructHeaders(headers),\n  }).then(\n    handleSuccess(dispatch, actions, 'receiveStore', alias),\n    (error) => {\n      if (axios.isCancel(error)) {\n        return null;\n      }\n\n      if (alias) {\n        dispatch(invokeAction(actions, 'receiveStore', error, alias));\n      }\n\n      throw error;\n    },\n  );\n};\n\n/**\n * Executes a PATCH request to a details REST API endpoint with resource attributes.\n * The `receiveDetails` should accept a single resource object.\n *\n * @param {String} alias   Identifier alias of the resource\n * @param {Object} data    Resource attributes that should be stored\n * @param {String} url     URL of the endpoint\n * @param {Object} actions Redux Actions object\n * @param {Object} headers Custom HTTP Headers\n * @return {Function}\n */\nexport const requestPatch = (alias, url, data, actions, headers = {}) => (dispatch) => {\n  dispatch(invokeAction(actions, 'requestDetails', alias));\n\n  const cancelToken = manager.cancelAxiosAndGetNextToken(url);\n\n  return axios.patch(url, data, {\n    cancelToken,\n    headers: constructHeaders(headers),\n  }).then(\n    handleSuccess(dispatch, actions, 'receiveDetails', alias),\n    handleError(dispatch, actions, 'receiveDetails', alias),\n  );\n};\n\n/**\n * Executes a DELETE request to a details REST API endpoint.\n * The `receiveDelete` should accept a single resource object. Resource object could be\n * empty if the server returns a 204 status code.\n *\n * @param {String} alias   Identifier alias of the resource\n * @param {String} url     URL of the endpoint\n * @param {Object} actions Redux Actions object\n * @param {Object} headers Custom HTTP Headers\n * @return {Function}\n */\nexport const requestDelete = (alias, url, actions, headers = {}) => (dispatch) => {\n  dispatch(invokeAction(actions, 'requestDelete', alias));\n\n  const cancelToken = manager.cancelAxiosAndGetNextToken(url);\n\n  return axios.delete(url, {\n    cancelToken,\n    headers: constructHeaders(headers),\n  }).then(\n    handleSuccess(dispatch, actions, 'receiveDelete', alias),\n    (error) => {\n      if (axios.isCancel(error)) {\n        return null;\n      }\n\n      if (alias) {\n        dispatch(invokeAction(actions, 'receiveDelete', error, alias));\n      }\n\n      throw error;\n    },\n  );\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport hljs from 'highlight.js';\n\nclass Code extends Component {\n  constructor(props) {\n    super(props);\n    this.element = React.createRef();\n  }\n\n  componentDidMount() {\n    this.highlight();\n  }\n\n  componentDidUpdate() {\n    this.highlight();\n  }\n\n  highlight() {\n    const { current } = this.element;\n    current.querySelectorAll('code').forEach(node => hljs.highlightBlock(node));\n  }\n\n  render() {\n    const { children, language } = this.props;\n\n    return (\n      <pre ref={this.element}>\n        <code className={`hljs ${language}`}>{children}</code>\n      </pre>\n    );\n  }\n}\n\nCode.propTypes = {\n  children: PropTypes.node.isRequired,\n  language: PropTypes.string,\n};\n\nCode.defaultProps = {\n  language: 'javascript',\n};\n\nexport default Code;\n","import {\n  CheckboxField,\n  KeyValueFieldArray,\n  PasswordField,\n  RangeField,\n  SelectField,\n  SpinnerField,\n  SubmitResetRow,\n  TextAreaField,\n  TextField,\n  Validators,\n  VerticalFieldArray,\n} from 'bandit-pouch';\nimport React from 'react';\nimport {\n  Col,\n  Row,\n} from 'react-bootstrap';\nimport {\n  Field,\n  FieldArray,\n  Form,\n  reduxForm,\n} from 'redux-form';\n\nconst FormFields = () => (\n  <section>\n    <Row>\n      <Col xs={4}>\n        <Field\n          autofocus\n          component={TextField}\n          name=\"text\"\n          label=\"Text field label\"\n          placeholder=\"Enter some text\"\n          validate={[Validators.required(), Validators.min(6)]}\n        />\n      </Col>\n      <Col xs={4}>\n        <Field\n          component={PasswordField}\n          name=\"password\"\n          label=\"Password field label\"\n          placeholder=\"Enter your password\"\n          validate={[\n            Validators.required(),\n            Validators.regex(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])/, 'Password should contain at least 1 '\n              + 'lower case  character, upper case character and a digit'),\n            Validators.min(6),\n            Validators.max(12),\n          ]}\n        />\n      </Col>\n      <Col xs={4}>\n        <Field\n          component={SelectField}\n          name=\"select\"\n          label=\"Select field label\"\n          placeholder=\"Select a value\"\n          validate={[Validators.required(), Validators.containing(['foo'])]}\n          options={[{\n            value: 'foo', label: 'Foo',\n          }, {\n            value: 'bar', label: 'Bar',\n          }]}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col xs={4}>\n        <Field\n          component={CheckboxField}\n          name=\"checkbox\"\n          label=\"Tick me\"\n        />\n      </Col>\n      <Col xs={4}>\n        <Field\n          component={SpinnerField}\n          name=\"number\"\n          label=\"Number spinner\"\n          min={2}\n          max={6}\n          validate={[Validators.between(2, 6)]}\n        />\n      </Col>\n      <Col xs={4}>\n        <Field\n          component={RangeField}\n          name=\"range\"\n          label=\"Range\"\n          min={0}\n          max={20}\n          validate={[Validators.between(0, 20)]}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col xs={12}>\n        <Field\n          component={TextAreaField}\n          name=\"textarea\"\n          label=\"Text area field label\"\n          placeholder=\"Write me a story\"\n          validate={[Validators.between(10, 200)]}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col xs={12}>\n        <FieldArray\n          component={KeyValueFieldArray}\n          name=\"keyvaluearray\"\n          label=\"Key value field array label\"\n          keyField={\n              <Field\n                component={TextField}\n                name=\"metric\"\n                placeholder=\"Metric...\"\n                validate={[Validators.required()]}\n              />\n          }\n          valueField={\n              <Field\n                component={TextField}\n                name=\"description\"\n                placeholder=\"Description...\"\n                validate={[Validators.required()]}\n              />\n          }\n          validate={[Validators.required()]}\n          help=\"To add key-value items to your forms.\"\n          emptyMessage={<i className=\"text-muted\">At least one key-value item is required.</i>}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col xs={12}>\n        <FieldArray\n          component={VerticalFieldArray}\n          name=\"verticalrray\"\n          label=\"Vertical array field title\"\n          innerComponent={({field}) => (\n            <Field\n              component={TextField}\n              name={`${field}.description`}\n              placeholder=\"Description...\"\n              validate={[Validators.required()]}\n            />\n          )}\n          validate={[Validators.required()]}\n          help=\"To add items to your forms.\"\n          emptyMessage={<i className=\"text-muted\">At least one item is required.</i>}\n          sortable={true}\n          duplicable={true}\n        />\n      </Col>\n    </Row>\n  </section>\n);\n\nconst ExampleForm = ({\n  handleSubmit, pristine, submitting, error, reset,\n}) => (\n  <Form onSubmit={handleSubmit}>\n    <FormFields />\n    <SubmitResetRow\n      {...{\n        pristine,\n        submitting,\n        error,\n        reset,\n      }}\n    />\n  </Form>\n);\n\nexport default reduxForm({\n  form: 'example',\n  anyTouched: false,\n})(ExampleForm);\n","import { createStore, compose, combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nconst reducer = combineReducers({\n  form: formReducer,\n});\n\nconst middleware = [];\nif (typeof window !== 'undefined') {\n  const { devToolsExtension } = window;\n  if (devToolsExtension && process.env.NODE_ENV !== 'production') {\n    middleware.push(devToolsExtension());\n  }\n}\n\nexport default createStore(reducer, {}, compose(...middleware));\n","import React, { Component } from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { Provider, connect } from 'react-redux';\n\nimport Code from '../components/code';\nimport Layout from '../components/layout';\nimport ExampleForm from '../components/form-example';\nimport { getArticles, Markdown } from '../components/markdown';\nimport store from '../store';\n\nconst Values = connect(\n  state => ({ ...state.form }),\n)(({ example = {} }) => {\n  const { registeredFields = {}, values = {}, fields = {} } = example;\n\n  const debug = Object.keys(registeredFields).reduce((obj, key) => {\n    const field = {\n      name: key,\n      value: values[key] || null,\n      active: false,\n      touched: false,\n      ...fields[key] || {},\n    };\n    return { ...obj, [key]: field };\n  }, {\n    active: example.active || false,\n    anyTouched: !!example.anyTouched,\n  });\n\n  return (\n    <div>\n      <p>Debug values</p>\n      <JSONCode json={debug} />\n    </div>\n  );\n});\n\nconst JSONCode = ({ json }) => (\n  <Code language=\"json\">{JSON.stringify(json, null, 2)}</Code>\n);\n\nJSONCode.propTypes = {\n  json: PropTypes.object.isRequired,\n};\n\nclass FormPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { values: false };\n  }\n\n  onSubmit(values) {\n    this.setState({ values });\n  }\n\n  render() {\n    const { data } = this.props;\n    const { values } = this.state;\n    const [article] = getArticles(data);\n\n    return (\n      <Provider store={store}>\n        <Layout>\n          <h1>Form components</h1>\n          <hr />\n          <ExampleForm onSubmit={e => this.onSubmit(e)} />\n\n          {values && (\n            <>\n              <p>Submitted values</p>\n              <JSONCode json={values} />\n            </>\n          )}\n\n          <Values />\n\n          <Markdown html={article.html} />\n        </Layout>\n      </Provider>\n    );\n  }\n}\n\nFormPage.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport const pageQuery = graphql`  \n  query {\n    allMarkdownRemark(filter: {\n      frontmatter: {\n        id: { glob: \"forms-*\" }\n      }\n    }){\n      edges {\n        node {\n          html\n          frontmatter {\n            id\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default FormPage;\n"],"sourceRoot":""}