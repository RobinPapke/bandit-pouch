{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<p>This module contains helper functions for building redux-actions Actions. The preferred way to do this is to use the\nfollowing functions:</p>\n<ul>\n<li>createActionNoArgs</li>\n<li>createActionWithPayload</li>\n<li>createActionWithMeta</li>\n<li>createActionWithPayloadAndMeta</li>\n</ul>\n<p>These functions restrict the signatures of the Actions to have zero to many meta arguments and zero or one payload\narguments. Meta arguments are used to identify the data that is being manipulated in the redux store, and the\npayload argument is incoming data that is to be reduced.</p>\n<p>Example Usage</p>\n<pre><code class=\"language-javascript\">import {\n     createActionNoArgs,\n     createActionWithMeta,\n     createActionWithPayload,\n     createActionWithPayloadAndMeta,\n } from 'common-ui';\n\n\n export default {\n     // No meta or payload\n     requestList: createActionNoArgs('category.list@request'),\n\n     // No meta, payload contains an array of categories received from the endpoint\n     receiveList: createActionWithPayload('category.list@receive'),\n\n     // Meta identifies the category to store by alias\n     requestStore: createActionWithMeta('category.store@request', ['alias']),\n\n     // Meta identifies the category to store by alias, payload contains the just-stored category details\n     receiveStore: createActionWithPayloadAndMeta('category.store@receive', ['alias']),\n }\n</code></pre>\n<p>Actions are functions which create objects which are dispatched via redux and reduced into the store by reducers.</p>\n<p>Example Usage</p>\n<pre><code class=\"language-javascript\">// (Actions) Create an action\naction = createActionWithPayloadAndMeta('database.tables.columns@receive', ['alias', 'schema', 'table']);\n\n// (Component) Dispatch an action\ndispatch(action({ (payload) }, 'myAlias', 'mySchema', 'myTable');\n\n// (Reducers) Handle the dispatched action via a Reducer to reduce the new payload into the store\n[action]: (state, {error, payload, meta: {alias, schema, table}}) =>\n</code></pre>","frontmatter":{"id":"redux-actions","title":"Actions"}}},{"node":{"html":"<p>These functions are used by reducers to create standard values in the redux store. They represent different states\nthat the data in the store can be in.</p>\n<p>Example Usage</p>\n<pre><code class=\"language-javascript\">import * as states from 'common-ui/redux/states';\n\n// Use initial state as a default state in your reducers\nexport function myReducer(state = states.initial(), action) {\n  switch (action.type) {\n  case 'LOADING':\n    // Sets the `loading` property in your state to `true`\n    return states.loading(state);\n  case 'FOUND':\n    // Sets the `loading` property in your state to `false`\n    return states.found({ ...state, model: action.model });\n  case 'ERROR':\n    // Sets the `loading` property in your state to `false`\n    // and adds an error value to your state.\n    return { ...state, ...states.deleted() };\n  case 'SAVING':\n    // Sets the `storing` property in your state to `true`\n    return { ...state, ...states.storing() };\n  case 'SAVED':\n    // Sets the `storing` property in your state to `false`\n    // you can also merge it with your model data from the action\n    return states.stored({ ...state, model: action.model });\n  case 'SAVE_FAILED':\n    // Sets the `storing` property in your state to `false`\n    // and adds an error value to your state. \n    return { ...state, ...states.storeError(action.error) };\n  case 'DELETING':\n    // Sets the `deleting` property in your state to `true`\n    return { ...state, ...states.deleting() };\n  case 'DELETED':\n    // Sets the `deleting` property in your state to `false`\n    return { ...state, ...states.deleted() };\n  case 'REVERTING':\n    // Sets the `reverting` property in your state to `false`\n    return { ...state, ...states.reverting() };\n  case 'REVERTED':\n    // Sets the `reverting` property in your state to `false`\n    return { ...state, ...states.reverted() };\n  }\n}\n</code></pre>","frontmatter":{"id":"redux-states","title":"States"}}}]}},"pageContext":{}}